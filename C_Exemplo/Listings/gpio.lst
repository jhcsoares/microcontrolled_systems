


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         ; Declarações EQU - Defines
    9 00000000         ; ========================
   10 00000000         ; Definições de Valores
   11 00000000 00000001 
                       BIT0    EQU              2_0001
   12 00000000 00000002 
                       BIT1    EQU              2_0010
   13 00000000         ; ========================
   14 00000000         ; Definições dos Registradores Gerais
   15 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   16 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   17 00000000         ; ========================
   18 00000000         ; Definições dos Ports
   19 00000000         ; PORT J
   20 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   21 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   22 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   23 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   24 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   25 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   26 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   27 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   28 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   29 00000000 40060000 
                       GPIO_PORTJ_AHB_DATA_BITS_R
                               EQU              0x40060000
   30 00000000 00000100 



ARM Macro Assembler    Page 2 


                       GPIO_PORTJ
                               EQU              2_000000100000000
   31 00000000         ; PORT N
   32 00000000 40064520 
                       GPIO_PORTN_AHB_LOCK_R
                               EQU              0x40064520
   33 00000000 40064524 
                       GPIO_PORTN_AHB_CR_R
                               EQU              0x40064524
   34 00000000 40064528 
                       GPIO_PORTN_AHB_AMSEL_R
                               EQU              0x40064528
   35 00000000 4006452C 
                       GPIO_PORTN_AHB_PCTL_R
                               EQU              0x4006452C
   36 00000000 40064400 
                       GPIO_PORTN_AHB_DIR_R
                               EQU              0x40064400
   37 00000000 40064420 
                       GPIO_PORTN_AHB_AFSEL_R
                               EQU              0x40064420
   38 00000000 4006451C 
                       GPIO_PORTN_AHB_DEN_R
                               EQU              0x4006451C
   39 00000000 40064510 
                       GPIO_PORTN_AHB_PUR_R
                               EQU              0x40064510
   40 00000000 400643FC 
                       GPIO_PORTN_AHB_DATA_R
                               EQU              0x400643FC
   41 00000000 40064000 
                       GPIO_PORTN_AHB_DATA_BITS_R
                               EQU              0x40064000
   42 00000000 00001000 
                       GPIO_PORTN
                               EQU              2_001000000000000
   43 00000000         
   44 00000000         
   45 00000000         ; ------------------------------------------------------
                       -------------------------
   46 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   47 00000000         ;                  código
   48 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   49 00000000         
   50 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   51 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
   52 00000000                 EXPORT           PortN_Output ; Permite chamar P
                                                            ortN_Output de outr
                                                            o arquivo
   53 00000000                 EXPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
   54 00000000         
   55 00000000         



ARM Macro Assembler    Page 3 


   56 00000000         ;-------------------------------------------------------
                       -------------------------
   57 00000000         ; Função GPIO_Init
   58 00000000         ; Parâmetro de entrada: Não tem
   59 00000000         ; Parâmetro de saída: Não tem
   60 00000000         GPIO_Init
   61 00000000         ;=====================
   62 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
   63 00000000         ; após isso verificar no PRGPIO se a porta está pronta p
                       ara uso.
   64 00000000         ; enable clock to GPIOF at clock gating register
   65 00000000 4826            LDR              R0, =SYSCTL_RCGCGPIO_R ;Carrega
                                                             o endereço do regi
                                                            strador RCGCGPIO
   66 00000002 F44F 5180       MOV              R1, #GPIO_PORTN ;Seta o bit da 
                                                            porta N
   67 00000006 F441 7180       ORR              R1, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
   68 0000000A 6001            STR              R1, [R0]    ;Move para a memóri
                                                            a os bits das porta
                                                            s no endereço do RC
                                                            GCGPIO
   69 0000000C         
   70 0000000C 4824            LDR              R0, =SYSCTL_PRGPIO_R ;Carrega o
                                                             endereço do PRGPIO
                                                             para esperar os GP
                                                            IO ficarem prontos
   71 0000000E 6801    EsperaGPIO
                               LDR              R1, [R0]    ;Lê da memória o co
                                                            nteúdo do endereço 
                                                            do registrador
   72 00000010 F44F 5280       MOV              R2, #GPIO_PORTN ;Seta os bits c
                                                            orrespondentes às p
                                                            ortas para fazer a 
                                                            comparação
   73 00000014 F442 7280       ORR              R2, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
   74 00000018 4211            TST              R1, R2      ;Testa o R1 com R2 
                                                            fazendo R1 & R2
   75 0000001A D0F8            BEQ              EsperaGPIO  ;Se o flag Z=1, vol
                                                            ta para o laço. Sen
                                                            ão continua executa
                                                            ndo
   76 0000001C         
   77 0000001C         ; 2. Destravar a porta somente se for o pino PD7
   78 0000001C         
   79 0000001C         ; 3. Limpar o AMSEL para desabilitar a analógica
   80 0000001C F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para desabil
                                                            itar a função analó
                                                            gica
   81 00000020 4820            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta J
   82 00000022 6001            STR              R1, [R0]    ;Guarda no registra



ARM Macro Assembler    Page 4 


                                                            dor AMSEL da porta 
                                                            J da memória
   83 00000024 4820            LDR              R0, =GPIO_PORTN_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta N
   84 00000026 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            N da memória
   85 00000028         
   86 00000028         ; 4. Limpar PCTL para selecionar o GPIO
   87 00000028 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para selecio
                                                            nar o modo GPIO
   88 0000002C 481F            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta J
   89 0000002E 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
   90 00000030 481F            LDR              R0, =GPIO_PORTN_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta N
   91 00000032 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta N
                                                             da memória
   92 00000034         ; 5. DIR para 0 se for entrada, 1 se for saída
   93 00000034 481F            LDR              R0, =GPIO_PORTN_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta N
   94 00000036 F04F 0101       MOV              R1, #BIT0   ;PN1 & PN0 para LED
                                                            
   95 0000003A F041 0102       ORR              R1, #BIT1   ;Enviar o valor 0x0
                                                            3 para habilitar os
                                                             pinos como saída
   96 0000003E 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor
   97 00000040         ; O certo era verificar os outros bits da PJ para não tr
                       ansformar entradas em saídas desnecessárias
   98 00000040 481D            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta J
   99 00000042 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com saída
  100 00000046 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
  101 00000048         ; 6. Limpar os bits AFSEL para 0 para selecionar GPIO 
  102 00000048         ;    Sem função alternativa
  103 00000048 F04F 0100       MOV              R1, #0x00   ;Colocar o valor 0 
                                                            para não setar funç
                                                            ão alternativa
  104 0000004C 481B            LDR              R0, =GPIO_PORTN_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do



ARM Macro Assembler    Page 5 


                                                             AFSEL da porta N
  105 0000004E 6001            STR              R1, [R0]    ;Escreve na porta
  106 00000050 481B            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta J
  107 00000052 6001            STR              R1, [R0]    ;Escreve na porta
  108 00000054         ; 7. Setar os bits de DEN para habilitar I/O digital
  109 00000054 481B            LDR              R0, =GPIO_PORTN_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  110 00000056 6801            LDR              R1, [R0]    ;Ler da memória o r
                                                            egistrador GPIO_POR
                                                            TN_AHB_DEN_R
  111 00000058 F04F 0201       MOV              R2, #BIT0
  112 0000005C F042 0202       ORR              R2, #BIT1   ;Habilitar funciona
                                                            lidade digital na D
                                                            EN os bits 0 e 1
  113 00000060 EA41 0102       ORR              R1, R2
  114 00000064 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                             
  115 00000066         
  116 00000066 4818            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  117 00000068 6801            LDR              R1, [R0]    ;Ler da memória o r
                                                            egistrador GPIO_POR
                                                            TN_AHB_DEN_R
  118 0000006A F04F 0201       MOV              R2, #BIT0
  119 0000006E F042 0202       ORR              R2, #BIT1   ;Habilitar funciona
                                                            lidade digital na D
                                                            EN os bits 0 e 1
  120 00000072 EA41 0102       ORR              R1, R2
  121 00000076 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                            
  122 00000078         
  123 00000078         ; 8. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  124 00000078 4814            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ;Carr
                                                            ega o endereço do P
                                                            UR para a porta J
  125 0000007A F04F 0101       MOV              R1, #BIT0   ;Habilitar funciona
                                                            lidade digital de r
                                                            esistor de pull-up 
                                                            
  126 0000007E F041 0102       ORR              R1, #BIT1   ;nos bits 0 e 1
  127 00000082 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória do 
                                                            resistor de pull-up
                                                            
  128 00000084 4770            BX               LR
  129 00000086         
  130 00000086         ; ------------------------------------------------------
                       -------------------------
  131 00000086         ; Função PortN_Output
  132 00000086         ; Parâmetro de entrada: R0 --> se o BIT1 está ligado ou 



ARM Macro Assembler    Page 6 


                       desligado
  133 00000086         ; Parâmetro de saída: Não tem
  134 00000086         PortN_Output
  135 00000086 4912            LDR              R1, =GPIO_PORTN_AHB_DATA_BITS_R
 
                                                            ;Carrega o valor do
                                                             offset do data reg
                                                            ister
  136 00000088 F101 010C       ADD              R1, #0x0C   ;Soma ao offset o e
                                                            ndereço do bit 1 pa
                                                            ra ser 
  137 0000008C         ;uma escrita amigável
  138 0000008C 6008            STR              R0, [R1]    ;Escreve no barrame
                                                            nto de dados na por
                                                            ta N1 somente
  139 0000008E 4770            BX               LR          ;Retorno
  140 00000090         
  141 00000090         ; ------------------------------------------------------
                       -------------------------
  142 00000090         ; Função PortJ_Input
  143 00000090         ; Parâmetro de entrada: Não tem
  144 00000090         ; Parâmetro de saída: R0 --> o valor da leitura
  145 00000090         PortJ_Input
  146 00000090 4910            LDR              R1, =GPIO_PORTJ_AHB_DATA_BITS_R
 
                                                            ;Carrega o valor do
                                                             offset do data reg
                                                            ister
  147 00000092 F101 010C       ADD              R1, #0x0C   ;Soma ao offset o e
                                                            ndereço dos bit 0 e
                                                             1 para 
  148 00000096         ;serem os únicos a serem lidos tem uma leitura amigável
  149 00000096 6808            LDR              R0, [R1]    ;Lê no barramento d
                                                            e dados nos pinos J
                                                            0 e J1 somente
  150 00000098 4770            BX               LR          ;Retorno
  151 0000009A         
  152 0000009A         
  153 0000009A         
  154 0000009A 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  155 0000009C                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40060528 
              40064528 
              4006052C 
              4006452C 
              40064400 
              40060400 
              40064420 
              40060420 
              4006451C 
              4006051C 
              40060510 
              40064000 
              40060000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int



ARM Macro Assembler    Page 7 


erwork --depend=.\objects\gpio.d -o.\objects\gpio.o -I.\RTE\_Target_1 -IC:\Keil
\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil\ARM\CMSIS\Includ
e --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 524" --predef
ine="TM4C1294NCPDT SETA 1" --list=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 48 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 0000000E

Symbol: EsperaGPIO
   Definitions
      At line 71 in file gpio.s
   Uses
      At line 75 in file gpio.s
Comment: EsperaGPIO used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 60 in file gpio.s
   Uses
      At line 51 in file gpio.s
Comment: GPIO_Init used once
PortJ_Input 00000090

Symbol: PortJ_Input
   Definitions
      At line 145 in file gpio.s
   Uses
      At line 53 in file gpio.s
Comment: PortJ_Input used once
PortN_Output 00000086

Symbol: PortN_Output
   Definitions
      At line 134 in file gpio.s
   Uses
      At line 52 in file gpio.s
Comment: PortN_Output used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 11 in file gpio.s
   Uses
      At line 94 in file gpio.s
      At line 111 in file gpio.s
      At line 118 in file gpio.s
      At line 125 in file gpio.s

BIT1 00000002

Symbol: BIT1
   Definitions
      At line 12 in file gpio.s
   Uses
      At line 95 in file gpio.s
      At line 112 in file gpio.s
      At line 119 in file gpio.s
      At line 126 in file gpio.s

GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 30 in file gpio.s
   Uses
      At line 67 in file gpio.s
      At line 73 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 106 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 22 in file gpio.s
   Uses
      At line 81 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 21 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_BITS_R 40060000

Symbol: GPIO_PORTJ_AHB_DATA_BITS_R
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 29 in file gpio.s
   Uses
      At line 146 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_BITS_R used once
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 28 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_R unused
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 116 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 24 in file gpio.s
   Uses
      At line 98 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 20 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 23 in file gpio.s
   Uses
      At line 88 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 27 in file gpio.s
   Uses
      At line 124 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTN 00001000

Symbol: GPIO_PORTN
   Definitions
      At line 42 in file gpio.s
   Uses
      At line 66 in file gpio.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 72 in file gpio.s

GPIO_PORTN_AHB_AFSEL_R 40064420

Symbol: GPIO_PORTN_AHB_AFSEL_R
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 104 in file gpio.s
Comment: GPIO_PORTN_AHB_AFSEL_R used once
GPIO_PORTN_AHB_AMSEL_R 40064528

Symbol: GPIO_PORTN_AHB_AMSEL_R
   Definitions
      At line 34 in file gpio.s
   Uses
      At line 83 in file gpio.s
Comment: GPIO_PORTN_AHB_AMSEL_R used once
GPIO_PORTN_AHB_CR_R 40064524

Symbol: GPIO_PORTN_AHB_CR_R
   Definitions
      At line 33 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_CR_R unused
GPIO_PORTN_AHB_DATA_BITS_R 40064000

Symbol: GPIO_PORTN_AHB_DATA_BITS_R
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 135 in file gpio.s
Comment: GPIO_PORTN_AHB_DATA_BITS_R used once
GPIO_PORTN_AHB_DATA_R 400643FC

Symbol: GPIO_PORTN_AHB_DATA_R
   Definitions
      At line 40 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_DATA_R unused
GPIO_PORTN_AHB_DEN_R 4006451C

Symbol: GPIO_PORTN_AHB_DEN_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 109 in file gpio.s
Comment: GPIO_PORTN_AHB_DEN_R used once
GPIO_PORTN_AHB_DIR_R 40064400

Symbol: GPIO_PORTN_AHB_DIR_R
   Definitions
      At line 36 in file gpio.s
   Uses
      At line 93 in file gpio.s
Comment: GPIO_PORTN_AHB_DIR_R used once
GPIO_PORTN_AHB_LOCK_R 40064520



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTN_AHB_LOCK_R
   Definitions
      At line 32 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_LOCK_R unused
GPIO_PORTN_AHB_PCTL_R 4006452C

Symbol: GPIO_PORTN_AHB_PCTL_R
   Definitions
      At line 35 in file gpio.s
   Uses
      At line 90 in file gpio.s
Comment: GPIO_PORTN_AHB_PCTL_R used once
GPIO_PORTN_AHB_PUR_R 40064510

Symbol: GPIO_PORTN_AHB_PUR_R
   Definitions
      At line 39 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_PUR_R unused
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 16 in file gpio.s
   Uses
      At line 70 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 15 in file gpio.s
   Uses
      At line 65 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
26 symbols
367 symbols in table
