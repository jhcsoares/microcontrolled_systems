


ARM Macro Assembler    Page 1 


    1 00000000         ; utils.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Código que apresenta algumas funcionalidades:
    4 00000000         ; - Altera a frequência do barramento usando o PLL
    5 00000000         ; - Configura o Systick para utilizar delays precisos
    6 00000000         
    7 00000000         ; Editado por Guilherme Peron
    8 00000000         ; 15/03/2018
    9 00000000         ; 26/08/2020
   10 00000000         ; 04/04/2023
   11 00000000         ; Copyright 2014 by Jonathan W. Valvano, valvano@mail.ut
                       exas.edu
   12 00000000         
   13 00000000         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
   14 00000000         ; PLL
   15 00000000         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
   16 00000000         ; A frequência do barramento será 80MHz
   17 00000000         ; Representa o divisor para inicializar o PLL para a fre
                       quência desejada
   18 00000000         ; Frequência do barramento é 480MHz/(PSYSDIV+1) = 480MHz
                       /(5+1) = 80 MHz
   19 00000000 00000005 
                       PSYSDIV EQU              5
   20 00000000         
   21 00000000 400FE050 
                       SYSCTL_RIS_R
                               EQU              0x400FE050
   22 00000000 00000100 
                       SYSCTL_RIS_MOSCPUPRIS
                               EQU              0x00000100  ; MOSC Power Up Raw
                                                             Interrupt Status
   23 00000000 400FE07C 
                       SYSCTL_MOSCCTL_R
                               EQU              0x400FE07C
   24 00000000 00000008 
                       SYSCTL_MOSCCTL_PWRDN
                               EQU              0x00000008  ; Power Down
   25 00000000 00000004 
                       SYSCTL_MOSCCTL_NOXTAL
                               EQU              0x00000004  ; No Crystal Connec
                                                            ted
   26 00000000 400FE0B0 
                       SYSCTL_RSCLKCFG_R
                               EQU              0x400FE0B0
   27 00000000 80000000 
                       SYSCTL_RSCLKCFG_MEMTIMU
                               EQU              0x80000000  ; Memory Timing Reg
                                                            ister Update
   28 00000000 40000000 
                       SYSCTL_RSCLKCFG_NEWFREQ
                               EQU              0x40000000  ; New PLLFREQ Accep
                                                            t
   29 00000000 10000000 
                       SYSCTL_RSCLKCFG_USEPLL
                               EQU              0x10000000  ; Use PLL



ARM Macro Assembler    Page 2 


   30 00000000 0F000000 
                       SYSCTL_RSCLKCFG_PLLSRC_M
                               EQU              0x0F000000  ; PLL Source
   31 00000000 03000000 
                       SYSCTL_RSCLKCFG_PLLSRC_MOSC
                               EQU              0x03000000  ; MOSC is the PLL i
                                                            nput clock source
   32 00000000 00F00000 
                       SYSCTL_RSCLKCFG_OSCSRC_M
                               EQU              0x00F00000  ; Oscillator Source
                                                            
   33 00000000 00300000 
                       SYSCTL_RSCLKCFG_OSCSRC_MOSC
                               EQU              0x00300000  ; MOSC is oscillato
                                                            r source
   34 00000000 000003FF 
                       SYSCTL_RSCLKCFG_PSYSDIV_M
                               EQU              0x000003FF  ; PLL System Clock 
                                                            Divisor
   35 00000000 400FE0C0 
                       SYSCTL_MEMTIM0_R
                               EQU              0x400FE0C0
   36 00000000 400FE144 
                       SYSCTL_DSCLKCFG_R
                               EQU              0x400FE144
   37 00000000 00F00000 
                       SYSCTL_DSCLKCFG_DSOSCSRC_M
                               EQU              0x00F00000  ; Deep Sleep Oscill
                                                            ator Source
   38 00000000 00300000 
                       SYSCTL_DSCLKCFG_DSOSCSRC_MOSC
                               EQU              0x00300000  ; MOSC
   39 00000000 400FE160 
                       SYSCTL_PLLFREQ0_R
                               EQU              0x400FE160
   40 00000000 00800000 
                       SYSCTL_PLLFREQ0_PLLPWR
                               EQU              0x00800000  ; PLL Power
   41 00000000 000FFC00 
                       SYSCTL_PLLFREQ0_MFRAC_M
                               EQU              0x000FFC00  ; PLL M Fractional 
                                                            Value
   42 00000000 000003FF 
                       SYSCTL_PLLFREQ0_MINT_M
                               EQU              0x000003FF  ; PLL M Integer Val
                                                            ue
   43 00000000 0000000A 
                       SYSCTL_PLLFREQ0_MFRAC_S
                               EQU              10
   44 00000000 00000000 
                       SYSCTL_PLLFREQ0_MINT_S
                               EQU              0
   45 00000000 400FE164 
                       SYSCTL_PLLFREQ1_R
                               EQU              0x400FE164
   46 00000000 00001F00 
                       SYSCTL_PLLFREQ1_Q_M
                               EQU              0x00001F00  ; PLL Q Value
   47 00000000 0000001F 



ARM Macro Assembler    Page 3 


                       SYSCTL_PLLFREQ1_N_M
                               EQU              0x0000001F  ; PLL N Value
   48 00000000 00000008 
                       SYSCTL_PLLFREQ1_Q_S
                               EQU              8
   49 00000000 00000000 
                       SYSCTL_PLLFREQ1_N_S
                               EQU              0
   50 00000000 400FE168 
                       SYSCTL_PLLSTAT_R
                               EQU              0x400FE168
   51 00000000 00000001 
                       SYSCTL_PLLSTAT_LOCK
                               EQU              0x00000001  ; PLL Lock
   52 00000000         
   53 00000000         
   54 00000000         
   55 00000000         ;NVIC REGISTERS
   56 00000000 E000E008 
                       NVIC_ACTLR_R
                               EQU              0xE000E008
   57 00000000 E000E100 
                       NVIC_EN0_R
                               EQU              0xE000E100
   58 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
   59 00000000 E000E108 
                       NVIC_EN2_R
                               EQU              0xE000E108
   60 00000000 E000E10C 
                       NVIC_EN3_R
                               EQU              0xE000E10C
   61 00000000 E000E180 
                       NVIC_DIS0_R
                               EQU              0xE000E180
   62 00000000 E000E184 
                       NVIC_DIS1_R
                               EQU              0xE000E184
   63 00000000 E000E188 
                       NVIC_DIS2_R
                               EQU              0xE000E188
   64 00000000 E000E18C 
                       NVIC_DIS3_R
                               EQU              0xE000E18C
   65 00000000 E000E200 
                       NVIC_PEND0_R
                               EQU              0xE000E200
   66 00000000 E000E204 
                       NVIC_PEND1_R
                               EQU              0xE000E204
   67 00000000 E000E208 
                       NVIC_PEND2_R
                               EQU              0xE000E208
   68 00000000 E000E20C 
                       NVIC_PEND3_R
                               EQU              0xE000E20C
   69 00000000 E000E280 
                       NVIC_UNPEND0_R



ARM Macro Assembler    Page 4 


                               EQU              0xE000E280
   70 00000000 E000E284 
                       NVIC_UNPEND1_R
                               EQU              0xE000E284
   71 00000000 E000E288 
                       NVIC_UNPEND2_R
                               EQU              0xE000E288
   72 00000000 E000E28C 
                       NVIC_UNPEND3_R
                               EQU              0xE000E28C
   73 00000000 E000E300 
                       NVIC_ACTIVE0_R
                               EQU              0xE000E300
   74 00000000 E000E304 
                       NVIC_ACTIVE1_R
                               EQU              0xE000E304
   75 00000000 E000E308 
                       NVIC_ACTIVE2_R
                               EQU              0xE000E308
   76 00000000 E000E30C 
                       NVIC_ACTIVE3_R
                               EQU              0xE000E30C
   77 00000000 E000E400 
                       NVIC_PRI0_R
                               EQU              0xE000E400
   78 00000000 E000E404 
                       NVIC_PRI1_R
                               EQU              0xE000E404
   79 00000000 E000E408 
                       NVIC_PRI2_R
                               EQU              0xE000E408
   80 00000000 E000E40C 
                       NVIC_PRI3_R
                               EQU              0xE000E40C
   81 00000000 E000E410 
                       NVIC_PRI4_R
                               EQU              0xE000E410
   82 00000000 E000E414 
                       NVIC_PRI5_R
                               EQU              0xE000E414
   83 00000000 E000E418 
                       NVIC_PRI6_R
                               EQU              0xE000E418
   84 00000000 E000E41C 
                       NVIC_PRI7_R
                               EQU              0xE000E41C
   85 00000000 E000E420 
                       NVIC_PRI8_R
                               EQU              0xE000E420
   86 00000000 E000E424 
                       NVIC_PRI9_R
                               EQU              0xE000E424
   87 00000000 E000E428 
                       NVIC_PRI10_R
                               EQU              0xE000E428
   88 00000000 E000E42C 
                       NVIC_PRI11_R
                               EQU              0xE000E42C
   89 00000000 E000E430 



ARM Macro Assembler    Page 5 


                       NVIC_PRI12_R
                               EQU              0xE000E430
   90 00000000 E000E434 
                       NVIC_PRI13_R
                               EQU              0xE000E434
   91 00000000 E000E438 
                       NVIC_PRI14_R
                               EQU              0xE000E438
   92 00000000 E000E43C 
                       NVIC_PRI15_R
                               EQU              0xE000E43C
   93 00000000 E000E440 
                       NVIC_PRI16_R
                               EQU              0xE000E440
   94 00000000 E000E444 
                       NVIC_PRI17_R
                               EQU              0xE000E444
   95 00000000 E000E448 
                       NVIC_PRI18_R
                               EQU              0xE000E448
   96 00000000 E000E44C 
                       NVIC_PRI19_R
                               EQU              0xE000E44C
   97 00000000 E000E450 
                       NVIC_PRI20_R
                               EQU              0xE000E450
   98 00000000 E000E454 
                       NVIC_PRI21_R
                               EQU              0xE000E454
   99 00000000 E000E458 
                       NVIC_PRI22_R
                               EQU              0xE000E458
  100 00000000 E000E45C 
                       NVIC_PRI23_R
                               EQU              0xE000E45C
  101 00000000 E000E460 
                       NVIC_PRI24_R
                               EQU              0xE000E460
  102 00000000 E000E464 
                       NVIC_PRI25_R
                               EQU              0xE000E464
  103 00000000 E000E468 
                       NVIC_PRI26_R
                               EQU              0xE000E468
  104 00000000 E000E46C 
                       NVIC_PRI27_R
                               EQU              0xE000E46C
  105 00000000 E000E470 
                       NVIC_PRI28_R
                               EQU              0xE000E470
  106 00000000 E000ED00 
                       NVIC_CPUID_R
                               EQU              0xE000ED00
  107 00000000 E000ED04 
                       NVIC_INT_CTRL_R
                               EQU              0xE000ED04
  108 00000000 E000ED08 
                       NVIC_VTABLE_R
                               EQU              0xE000ED08



ARM Macro Assembler    Page 6 


  109 00000000 E000ED0C 
                       NVIC_APINT_R
                               EQU              0xE000ED0C
  110 00000000 E000ED10 
                       NVIC_SYS_CTRL_R
                               EQU              0xE000ED10
  111 00000000 E000ED14 
                       NVIC_CFG_CTRL_R
                               EQU              0xE000ED14
  112 00000000 E000ED18 
                       NVIC_SYS_PRI1_R
                               EQU              0xE000ED18
  113 00000000 E000ED1C 
                       NVIC_SYS_PRI2_R
                               EQU              0xE000ED1C
  114 00000000 E000ED20 
                       NVIC_SYS_PRI3_R
                               EQU              0xE000ED20
  115 00000000 E000ED24 
                       NVIC_SYS_HND_CTRL_R
                               EQU              0xE000ED24
  116 00000000 E000ED28 
                       NVIC_FAULT_STAT_R
                               EQU              0xE000ED28
  117 00000000 E000ED2C 
                       NVIC_HFAULT_STAT_R
                               EQU              0xE000ED2C
  118 00000000 E000ED30 
                       NVIC_DEBUG_STAT_R
                               EQU              0xE000ED30
  119 00000000 E000ED34 
                       NVIC_MM_ADDR_R
                               EQU              0xE000ED34
  120 00000000 E000ED38 
                       NVIC_FAULT_ADDR_R
                               EQU              0xE000ED38
  121 00000000 E000ED88 
                       NVIC_CPAC_R
                               EQU              0xE000ED88
  122 00000000 E000ED90 
                       NVIC_MPU_TYPE_R
                               EQU              0xE000ED90
  123 00000000 E000ED94 
                       NVIC_MPU_CTRL_R
                               EQU              0xE000ED94
  124 00000000 E000ED98 
                       NVIC_MPU_NUMBER_R
                               EQU              0xE000ED98
  125 00000000 E000ED9C 
                       NVIC_MPU_BASE_R
                               EQU              0xE000ED9C
  126 00000000 E000EDA0 
                       NVIC_MPU_ATTR_R
                               EQU              0xE000EDA0
  127 00000000 E000EDA4 
                       NVIC_MPU_BASE1_R
                               EQU              0xE000EDA4
  128 00000000 E000EDA8 
                       NVIC_MPU_ATTR1_R



ARM Macro Assembler    Page 7 


                               EQU              0xE000EDA8
  129 00000000 E000EDAC 
                       NVIC_MPU_BASE2_R
                               EQU              0xE000EDAC
  130 00000000 E000EDB0 
                       NVIC_MPU_ATTR2_R
                               EQU              0xE000EDB0
  131 00000000 E000EDB4 
                       NVIC_MPU_BASE3_R
                               EQU              0xE000EDB4
  132 00000000 E000EDB8 
                       NVIC_MPU_ATTR3_R
                               EQU              0xE000EDB8
  133 00000000 E000EDF0 
                       NVIC_DBG_CTRL_R
                               EQU              0xE000EDF0
  134 00000000 E000EDF4 
                       NVIC_DBG_XFER_R
                               EQU              0xE000EDF4
  135 00000000 E000EDF8 
                       NVIC_DBG_DATA_R
                               EQU              0xE000EDF8
  136 00000000 E000EDFC 
                       NVIC_DBG_INT_R
                               EQU              0xE000EDFC
  137 00000000 E000EF00 
                       NVIC_SW_TRIG_R
                               EQU              0xE000EF00
  138 00000000 E000EF34 
                       NVIC_FPCC_R
                               EQU              0xE000EF34
  139 00000000 E000EF38 
                       NVIC_FPCA_R
                               EQU              0xE000EF38
  140 00000000 E000EF3C 
                       NVIC_FPDSC_R
                               EQU              0xE000EF3C
  141 00000000         
  142 00000000         
  143 00000000         
  144 00000000         
  145 00000000 40060000 
                       GPIO_PORTJ_AHB_DATA_BITS_R
                               EQU              0x40060000
  146 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
  147 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
  148 00000000 40060404 
                       GPIO_PORTJ_AHB_IS_R
                               EQU              0x40060404
  149 00000000 40060408 
                       GPIO_PORTJ_AHB_IBE_R
                               EQU              0x40060408
  150 00000000 4006040C 
                       GPIO_PORTJ_AHB_IEV_R
                               EQU              0x4006040C



ARM Macro Assembler    Page 8 


  151 00000000 40060410 
                       GPIO_PORTJ_AHB_IM_R
                               EQU              0x40060410
  152 00000000 40060414 
                       GPIO_PORTJ_AHB_RIS_R
                               EQU              0x40060414
  153 00000000 40060418 
                       GPIO_PORTJ_AHB_MIS_R
                               EQU              0x40060418
  154 00000000 4006041C 
                       GPIO_PORTJ_AHB_ICR_R
                               EQU              0x4006041C
  155 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
  156 00000000 40060500 
                       GPIO_PORTJ_AHB_DR2R_R
                               EQU              0x40060500
  157 00000000 40060504 
                       GPIO_PORTJ_AHB_DR4R_R
                               EQU              0x40060504
  158 00000000 40060508 
                       GPIO_PORTJ_AHB_DR8R_R
                               EQU              0x40060508
  159 00000000 4006050C 
                       GPIO_PORTJ_AHB_ODR_R
                               EQU              0x4006050C
  160 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
  161 00000000 40060514 
                       GPIO_PORTJ_AHB_PDR_R
                               EQU              0x40060514
  162 00000000 40060518 
                       GPIO_PORTJ_AHB_SLR_R
                               EQU              0x40060518
  163 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
  164 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
  165 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
  166 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
  167 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
  168 00000000 40060530 
                       GPIO_PORTJ_AHB_ADCCTL_R
                               EQU              0x40060530
  169 00000000 40060534 
                       GPIO_PORTJ_AHB_DMACTL_R
                               EQU              0x40060534
  170 00000000 40060538 
                       GPIO_PORTJ_AHB_SI_R



ARM Macro Assembler    Page 9 


                               EQU              0x40060538
  171 00000000 4006053C 
                       GPIO_PORTJ_AHB_DR12R_R
                               EQU              0x4006053C
  172 00000000 40060540 
                       GPIO_PORTJ_AHB_WAKEPEN_R
                               EQU              0x40060540
  173 00000000 40060544 
                       GPIO_PORTJ_AHB_WAKELVL_R
                               EQU              0x40060544
  174 00000000 40060548 
                       GPIO_PORTJ_AHB_WAKESTAT_R
                               EQU              0x40060548
  175 00000000 40060FC0 
                       GPIO_PORTJ_AHB_PP_R
                               EQU              0x40060FC0
  176 00000000 40060FC4 
                       GPIO_PORTJ_AHB_PC_R
                               EQU              0x40060FC4
  177 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000
  178 00000000         
  179 00000000         
  180 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  181 00000000                 THUMB
  182 00000000                 EXPORT           PLL_Init
  183 00000000                 EXPORT           Interrupt_Init
  184 00000000         
  185 00000000         Interrupt_Init
  186 00000000 4873            LDR              R0, =GPIO_PORTJ_AHB_IM_R
  187 00000002 F04F 0100       MOV              R1, #0
  188 00000006 6001            STR              R1, [R0]
  189 00000008         
  190 00000008 4872            LDR              R0, =GPIO_PORTJ_AHB_IS_R
  191 0000000A F04F 0100       MOV              R1, #0
  192 0000000E 6001            STR              R1, [R0]
  193 00000010         
  194 00000010 4871            LDR              R0, =GPIO_PORTJ_AHB_IBE_R
  195 00000012 F04F 0100       MOV              R1, #0
  196 00000016 6001            STR              R1, [R0]
  197 00000018         
  198 00000018 4870            LDR              R0, =GPIO_PORTJ_AHB_IEV_R
  199 0000001A F04F 010A       MOV              R1, #10
  200 0000001E 6001            STR              R1, [R0]
  201 00000020         
  202 00000020 486F            LDR              R0, =GPIO_PORTJ_AHB_ICR_R
  203 00000022 F04F 010B       MOV              R1, #11
  204 00000026 6001            STR              R1, [R0]
  205 00000028         
  206 00000028 4869            LDR              R0, =GPIO_PORTJ_AHB_IM_R
  207 0000002A F04F 010B       MOV              R1, #11
  208 0000002E 6001            STR              R1, [R0]
  209 00000030         
  210 00000030 486C            LDR              R0, =NVIC_EN1_R
  211 00000032 F04F 0100       MOV              R1, #0X0000
  212 00000036 F2C0 0108       MOVT             R1, #2_1000
  213 0000003A 6001            STR              R1, [R0]



ARM Macro Assembler    Page 10 


  214 0000003C         
  215 0000003C 486A            LDR              R0, =NVIC_PRI12_R
  216 0000003E F04F 0105       MOV              R1, #5
  217 00000042 EA4F 7141       LSL              R1, #29
  218 00000046         
  219 00000046 4770            BX               LR
  220 00000048         
  221 00000048         ;------------PLL_Init------------
  222 00000048         ; Configura o sistema para utilizar o clock do PLL
  223 00000048         ; Entrada: Nenhum
  224 00000048         ; Saída: Nenhum
  225 00000048         ; Modifica: R0, R1, R2, R3
  226 00000048         PLL_Init
  227 00000048         ; Capítulo 5 do Datasheet
  228 00000048         ; 1) Depois que a configuração for pronta, o PIOSC provê
                        o clock do sistema. Este,
  229 00000048         ;    passo garante que se a função já tenha sido chamada
                        antes, o sistema desabilite
  230 00000048         ;    o clock do PLL antes de configurá-lo novamente.
  231 00000048 4968            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p
                                                            onteiro)
  232 0000004A 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  233 0000004C F020 5080       BIC              R0, R0, #SYSCTL_RSCLKCFG_USEPLL
 
                                                            ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_USEPLL (lim
                                                            par o bit USEPLL bi
                                                            t para não clockar 
                                                            pelo PLL)
  234 00000050 6008            STR              R0, [R1]    ; [R1] = R0
  235 00000052         ; 2) Ligar o MOSC limpando o bit NOXTAL bit no registrad
                       or SYSCTL_MOSCCTL_R.
  236 00000052         ; 3) Como o modo cristal é requerido, limpar o bit de PW
                       RDN. O datasheet pede 
  237 00000052         ;     para fazer estas duas operações em um único acesso
                        de escrita ao SYSCTL_MOSCCTL_R.
  238 00000052 4967            LDR              R1, =SYSCTL_MOSCCTL_R ; R1 = SY
                                                            SCTL_MOSCCTL_R (poi
                                                            nter)
  239 00000054 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  240 00000056 F020 0004       BIC              R0, R0, #SYSCTL_MOSCCTL_NOXTAL 
                                                            ; R0 = R0&~SYSCTL_M
                                                            OSCCTL_NOXTAL (limp
                                                            a o bit NOXTAL para
                                                             usar o cristal ext
                                                            erno de 25 MHz)
  241 0000005A F020 0008       BIC              R0, R0, #SYSCTL_MOSCCTL_PWRDN ;
                                                             R0 = R0&~SYSCTL_MO
                                                            SCCTL_PWRDN (limpa 
                                                            o bit PWRDN para li
                                                            gar o oscilador pri
                                                            ncipal)
  242 0000005E 6008            STR              R0, [R1]    ; [R1] = R0 (ambas 
                                                            alterações em um ún
                                                            ico acesso)
  243 00000060         ;    Esperar pelo bit MOSCPUPRIS ser setado no registrad



ARM Macro Assembler    Page 11 


                       or SYSCTL_RIS_R register, indicando
  244 00000060         ;    que o cristal modo MOSC está pronto
  245 00000060 4964            LDR              R1, =SYSCTL_RIS_R ; R1 = SYSCTL
                                                            _RIS_R (pointer)
  246 00000062         PLL_Init_step3loop
  247 00000062 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  248 00000064 F410 7080       ANDS             R0, R0, #SYSCTL_RIS_MOSCPUPRIS 
                                                            ; R0 = R0&SYSCTL_RI
                                                            S_MOSCPUPRIS
  249 00000068 D0FB            BEQ              PLL_Init_step3loop ; if(R0 == 0
                                                            ), keep polling
  250 0000006A         
  251 0000006A         ; 4) Setar os campos OSCSRC e PLLSRC para 0x3 no registr
                       ador SYSCTL_RSCLKCFG_R
  252 0000006A         ;    no offset 0x0B0.
  253 0000006A 4960            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p
                                                            ointer)
  254 0000006C 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  255 0000006E F420 0070       BIC              R0, R0, #SYSCTL_RSCLKCFG_OSCSRC
_M 
                                                            ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_OSCSRC_M (l
                                                            impar o campo syste
                                                            m run/sleep clock s
                                                            ource)
  256 00000072 F500 1040       ADD              R0, R0, #SYSCTL_RSCLKCFG_OSCSRC
_MOSC 
                                                            ; R0 = R0 + SYSCTL_
                                                            RSCLKCFG_OSCSRC_MOS
                                                            C (configurar para 
                                                            temporariamente obt
                                                            er o clock do oscil
                                                            ador de 25MHz princ
                                                            ipal)
  257 00000076 F020 6070       BIC              R0, R0, #SYSCTL_RSCLKCFG_PLLSRC
_M 
                                                            ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_PLLSRC_M (l
                                                            impar o campo PLL c
                                                            lock source)
  258 0000007A F100 7040       ADD              R0, R0, #SYSCTL_RSCLKCFG_PLLSRC
_MOSC 
                                                            ; R0 = R0 + SYSCTL_
                                                            RSCLKCFG_PLLSRC_MOS
                                                            C (configurar para 
                                                            o clock do PLL do o
                                                            scilador principal)
                                                            
  259 0000007E 6008            STR              R0, [R1]    ; [R1] = R0
  260 00000080         ; 5) Se a aplicação também necessita que o MOSC seja a f
                       onte de clock para deep-sleep
  261 00000080         ;    então programar o campo DSOSCSRC no registrador SYS
                       CTL_DSCLKCFG_R para 0x3.
  262 00000080 495D            LDR              R1, =SYSCTL_DSCLKCFG_R ; R1 = S
                                                            YSCTL_DSCLKCFG_R (p
                                                            ointer)



ARM Macro Assembler    Page 12 


  263 00000082 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  264 00000084 F420 0070       BIC              R0, R0, #SYSCTL_DSCLKCFG_DSOSCS
RC_M 
                                                            ; R0 = R0&~SYSCTL_D
                                                            SCLKCFG_DSOSCSRC_M 
                                                            (clear system deep-
                                                            sleep clock source 
                                                            field)
  265 00000088 F500 1040       ADD              R0, R0, #SYSCTL_DSCLKCFG_DSOSCS
RC_MOSC 
                                                            ; R0 = R0 + SYSCTL_
                                                            DSCLKCFG_DSOSCSRC_M
                                                            OSC (configure to g
                                                            et deep-sleep clock
                                                             from main oscillat
                                                            or)
  266 0000008C 6008            STR              R0, [R1]    ; [R1] = R0
  267 0000008E         ; 6) Escrever os registradores SYSCTL_PLLFREQ0_R e SYSCT
                       L_PLLFREQ1_R com os valores de
  268 0000008E         ;    Q, N, MINT, e MFRAC para configurar as configuraçõe
                       s desejadas da frequência de VCO.
  269 0000008E         ;    ************
  270 0000008E         ;    fVC0 = (fXTAL/(Q + 1)/(N + 1))*(MINT + (MFRAC/1,024
                       ))
  271 0000008E         ;    fVCO = 480,000,000 Hz (arbitrary, but presumably as
                        small as needed)
  272 0000008E         ;    Para uma frequência que não seja um divisor inteiro
                        de 480 MHz, mudar esta seção
  273 0000008E 017D7840 
                       FXTAL   EQU              25000000    ; fixa, o cristal e
                                                            stá soldado no Laun
                                                            chpad
  274 0000008E 00000000 
                       Q       EQU              0
  275 0000008E 00000004 
                       N       EQU              4           ; escolhido para se
                                                            r a frequência de r
                                                            eferência entre 4 e
                                                             30 MHz
  276 0000008E 00000060 
                       MINT    EQU              96          ; 480,000,000 = (25
                                                            ,000,000/(0 + 1)/(4
                                                             + 1))*(96 + (0/1,0
                                                            24))
  277 0000008E 00000000 
                       MFRAC   EQU              0           ; zero para reduzir
                                                             o jitter
  278 0000008E         ;    SysClk = fVCO / (PSYSDIV + 1)
  279 0000008E 04C4B400 
                       SYSCLK  EQU              (FXTAL/(Q+1)/(N+1))*(MINT+MFRAC
/1024)/(PSYSDIV+1)
  280 0000008E 495B            LDR              R1, =SYSCTL_PLLFREQ0_R ; R1 = S
                                                            YSCTL_PLLFREQ0_R (p
                                                            onteiro)
  281 00000090 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  282 00000092 4B5B            LDR              R3, =SYSCTL_PLLFREQ0_MFRAC_M ; 
                                                            R3 = SYSCTL_PLLFREQ



ARM Macro Assembler    Page 13 


                                                            0_MFRAC_M (máscar)
  283 00000094 EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~SYSCTL_P
                                                            LLFREQ0_MFRAC_M (li
                                                            mpar o campo MFRAC)
                                                            
  284 00000098 F04F 0300       LDR              R3, =(MFRAC<<SYSCTL_PLLFREQ0_MF
RAC_S) 
                                                            ; R3 = (MFRAC<<SYSC
                                                            TL_PLLFREQ0_MFRAC_S
                                                            ) (valor deslocado)
                                                            
  285 0000009C 4418            ADD              R0, R0, R3  ; R0 = R0 + (MFRAC<
                                                            <SYSCTL_PLLFREQ0_MF
                                                            RAC_S) (configurar 
                                                            MFRAC como definido
                                                             acima)
  286 0000009E F240 33FF       LDR              R3, =SYSCTL_PLLFREQ0_MINT_M ; R
                                                            3 = SYSCTL_PLLFREQ0
                                                            _MINT_M (máscara)
  287 000000A2 EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~SYSCTL_P
                                                            LLFREQ0_MINT_M (lim
                                                            par o campo MINT)
  288 000000A6 F100 0060       ADD              R0, R0, #(MINT<<SYSCTL_PLLFREQ0
_MINT_S) 
                                                            ; R0 = R0 + (MINT<<
                                                            SYSCTL_PLLFREQ0_MIN
                                                            T_S) (configurar MI
                                                            NT como definido ac
                                                            ima)
  289 000000AA 6008            STR              R0, [R1]    ; [R1] = R0 (MFRAC 
                                                            e MINT alteraram ma
                                                            s não estão fixados
                                                             ainda)
  290 000000AC 4955            LDR              R1, =SYSCTL_PLLFREQ1_R ; R1 = S
                                                            YSCTL_PLLFREQ1_R (p
                                                            onteiro)
  291 000000AE 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  292 000000B0 F420 50F8       BIC              R0, R0, #SYSCTL_PLLFREQ1_Q_M ; 
                                                            R0 = R0&~SYSCTL_PLL
                                                            FREQ1_Q_M (limpar o
                                                             campo Q)
  293 000000B4 F100 0000       ADD              R0, R0, #(Q<<SYSCTL_PLLFREQ1_Q_
S) 
                                                            ; R0 = R0 + (Q<<SYS
                                                            CTL_PLLFREQ1_Q_S) (
                                                            configurar Q como d
                                                            efinido acima)
  294 000000B8 F020 001F       BIC              R0, R0, #SYSCTL_PLLFREQ1_N_M ; 
                                                            R0 = R0&~SYSCTL_PLL
                                                            FREQ1_N_M (limpar o
                                                             campo N)
  295 000000BC F100 0004       ADD              R0, R0, #(N<<SYSCTL_PLLFREQ1_N_
S) 
                                                            ; R0 = R0 + (N<<SYS
                                                            CTL_PLLFREQ1_N_S) (
                                                            configurar N como d
                                                            efinido acima)
  296 000000C0 6008            STR              R0, [R1]    ; [R1] = R0 (Q e N 



ARM Macro Assembler    Page 14 


                                                            alteraram mas não e
                                                            stão fixados ainda)
                                                            
  297 000000C2 494E            LDR              R1, =SYSCTL_PLLFREQ0_R ; R1 = S
                                                            YSCTL_PLLFREQ0_R (p
                                                            onteiro)
  298 000000C4 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  299 000000C6 F440 0000       ORR              R0, R0, #SYSCTL_PLLFREQ0_PLLPWR
 
                                                            ; R0 = R0|SYSCTL_PL
                                                            LFREQ0_PLLPWR (liga
                                                            r a energia para o 
                                                            PLL)
  300 000000CA 6008            STR              R0, [R1]    ; [R1] = R0
  301 000000CC 4947            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p
                                                            onteiro)
  302 000000CE 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  303 000000D0 F040 4080       ORR              R0, R0, #SYSCTL_RSCLKCFG_NEWFRE
Q 
                                                            ; R0 = R0|SYSCTL_RS
                                                            CLKCFG_NEWFREQ (fix
                                                            ar as mudanças no r
                                                            egistrador)
  304 000000D4 6008            STR              R0, [R1]    ; [R1] = R0
  305 000000D6         ; 7) Escrever o registrador SYSCTL_MEMTIM0_R para a nova
                        configuração de clock.
  306 000000D6         ;    ************
  307 000000D6         ;    Configurar os parâmetros de tempo para as memórias 
                       Flash e EEPROM que 
  308 000000D6         ;    dependem da frequência do clock do sistema. Ver a T
                       abela 5-12 do datasheet.
  309 000000D6 494C            LDR              R1, =SYSCTL_MEMTIM0_R ; R1 = SY
                                                            SCTL_MEMTIM0_R (pon
                                                            teiro)
  310 000000D8 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  311 000000DA 4B4C            LDR              R3, =0x03EF03EF ; R3 = 0x03EF03
                                                            EF (máscara)
  312 000000DC EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~0x03EF03
                                                            EF (limpar os campo
                                                            s EBCHT, EBCE, EWS,
                                                             FBCHT, FBCE, e FWS
                                                             fields)
  313 000000E0 4A4B            LDR              R2, =SYSCLK ; R2 = (FXTAL/(Q+1)
                                                            /(N+1))*(MINT+MFRAC
                                                            /1024)/(PSYSDIV+1)
  314 000000E2 4B4C            LDR              R3, =120000000 ; R3 = 80,000,00
                                                            0 (value)
  315 000000E4 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (120,000,000 Hz)
                                                            ?
  316 000000E6 D900            BLS              PLL_Init_step7fullspeed ; se si
                                                            m, pular o próximo 
                                                            teste
  317 000000E8         PLL_Init_step7toofast                ; 120 MHz < SysClk:
                                                             "too fast"



ARM Macro Assembler    Page 15 


  318 000000E8         ; Um configuração é inválida e o PLL não pode operar mai
                       s rápido que 120MHz.
  319 000000E8         ; Pula o resto da inicialização, levando o sistema a ope
                       rar pelo MOSC
  320 000000E8         ; que é o cristal de 25MHz.
  321 000000E8 4770            BX               LR          ; retorna
  322 000000EA         PLL_Init_step7fullspeed              ; 100 MHz < SysClk 
                                                            <= 120 MHz: "full s
                                                            peed"
  323 000000EA 4B4B            LDR              R3, =100000000 ; R3 = 100,000,0
                                                            00 (valor)
  324 000000EC 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (100,000,000 Hz)
                                                            ?
  325 000000EE D902            BLS              PLL_Init_step7veryfast ; se sim
                                                            , pula o próximo te
                                                            ste
  326 000000F0 4B4A            LDR              R3, =0x01850185 ; R3 = 0x018501
                                                            85 (valores desloca
                                                            dos)
  327 000000F2 4418            ADD              R0, R0, R3  ; R0 = R0 + 0x01850
                                                            185 (FBCHT/EBCHT = 
                                                            6, FBCE/EBCE = 0, F
                                                            WS/EWS = 5)
  328 000000F4 E01F            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  329 000000F6         PLL_Init_step7veryfast               ; 80 MHz < SysClk <
                                                            = 100 MHz: "very fa
                                                            st"
  330 000000F6 4B46            LDR              R3, =80000000 ; R3 = 80,000,000
                                                             (valor)
  331 000000F8 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (80,000,000 Hz)?
                                                            
  332 000000FA D902            BLS              PLL_Init_step7fast ; se sim, pu
                                                            la o próximo teste
  333 000000FC 4B48            LDR              R3, =0x01440144 ; R3 = 0x014401
                                                            44 (valores desloca
                                                            dos)
  334 000000FE 4418            ADD              R0, R0, R3  ; R0 = R0 + 0x01440
                                                            144 (FBCHT/EBCHT = 
                                                            5, FBCE/EBCE = 0, F
                                                            WS/EWS = 4)
  335 00000100 E019            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  336 00000102         PLL_Init_step7fast                   ; 60 MHz < SysClk <
                                                            = 80 MHz: "fast"
  337 00000102 4B48            LDR              R3, =60000000 ; R3 = 60,000,000
                                                             (valor)
  338 00000104 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (60,000,000 Hz)?
                                                            
  339 00000106 D902            BLS              PLL_Init_step7medium ; se sim, 
                                                            pula o próximo test
                                                            e
  340 00000108 4B47            LDR              R3, =0x01030103 ; R3 = 0x010301
                                                            03 (valores desloca



ARM Macro Assembler    Page 16 


                                                            dos)
  341 0000010A 4418            ADD              R0, R0, R3  ; R0 = R0 + 0x01030
                                                            103 (FBCHT/EBCHT = 
                                                            4, FBCE/EBCE = 0, F
                                                            WS/EWS = 3)
  342 0000010C E013            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  343 0000010E         PLL_Init_step7medium                 ; 40 MHz < SysClk <
                                                            = 60 MHz: "medium"
  344 0000010E 4B47            LDR              R3, =40000000 ; R3 = 40,000,000
                                                             (valor)
  345 00000110 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (40,000,000 Hz)?
                                                            
  346 00000112 D902            BLS              PLL_Init_step7slow ; se sim, pu
                                                            la o próximo teste
  347 00000114 F100 10C2       ADD              R0, R0, #0x00C200C2 ; R0 = R0 +
                                                             0x00C200C2 (FBCHT/
                                                            EBCHT = 3, FBCE/EBC
                                                            E = 0, FWS/EWS = 2)
                                                            
  348 00000118 E00D            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  349 0000011A         PLL_Init_step7slow                   ; 16 MHz < SysClk <
                                                            = 40 MHz: "slow"
  350 0000011A 4B45            LDR              R3, =16000000 ; R3 = 16,000,000
                                                             (value)
  351 0000011C 429A            CMP              R2, R3      ; é R2 (SysClk) <= 
                                                            R3 (16,000,000 Hz)?
                                                            
  352 0000011E D902            BLS              PLL_Init_step7veryslow ; se sim
                                                            , pula o próximo te
                                                            ste
  353 00000120 F100 1081       ADD              R0, R0, #0x00810081 ; R0 = R0 +
                                                             0x00810081 (FBCHT/
                                                            EBCHT = 2, FBCE/EBC
                                                            E = 1, FWS/EWS = 1)
                                                            
  354 00000124 E007            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f
                                                            im
  355 00000126         PLL_Init_step7veryslow               ; SysClk == 16 MHz:
                                                             "very slow"
  356 00000126 4B42            LDR              R3, =16000000 ; R3 = 16,000,000
                                                             (value)
  357 00000128 429A            CMP              R2, R3      ; é R2 (SysClk) < R
                                                            3 (16,000,000 Hz)?
  358 0000012A D302            BLO              PLL_Init_step7extremelyslow ; s
                                                            e sim, pula o próxi
                                                            mo teste
  359 0000012C F100 1020       ADD              R0, R0, #0x00200020 ; R0 = R0 +
                                                             0x00200020 (FBCHT/
                                                            EBCHT = 0, FBCE/EBC
                                                            E = 1, FWS/EWS = 0)
                                                            
  360 00000130 E001            B                PLL_Init_step7done ; branch inc
                                                            ondicional para o f



ARM Macro Assembler    Page 17 


                                                            im
  361 00000132         PLL_Init_step7extremelyslow          ; SysClk < 16 MHz: 
                                                            "extremely slow"
  362 00000132 F100 0000       ADD              R0, R0, #0x00000000 ; R0 = R0 +
                                                             0x00000000 (FBCHT/
                                                            EBCHT = 0, FBCE/EBC
                                                            E = 0, FWS/EWS = 0)
                                                            
  363 00000136         PLL_Init_step7done
  364 00000136 6008            STR              R0, [R1]    ; [R1] = R0 (SYSCTL
                                                            _MEMTIM0_R alterado
                                                             mas não fixado ain
                                                            da)
  365 00000138         ; 8) Espera pelo registrador SYSCTL_PLLSTAT_R indicar qu
                       e o PLL atingiu travamento
  366 00000138         ;    no novo ponto de operação (ou que um período de tim
                       eout passou e o travamento
  367 00000138         ;    falhou, que no caso uma condição de erro existe e e
                       sta sequência é abandonada
  368 00000138 493E            LDR              R1, =SYSCTL_PLLSTAT_R ; R1 = SY
                                                            SCTL_PLLSTAT_R (poi
                                                            nter)
  369 0000013A F04F 0200       MOV              R2, #0      ; R2 = 0 (timeout c
                                                            ounter)
  370 0000013E F64F 73FF       MOV              R3, #0xFFFF ; R3 = 0xFFFF (valu
                                                            e)
  371 00000142         PLL_Init_step8loop
  372 00000142 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
  373 00000144 F010 0001       ANDS             R0, R0, #SYSCTL_PLLSTAT_LOCK ; 
                                                            R0 = R0&SYSCTL_PLLS
                                                            TAT_LOCK
  374 00000148 D104            BNE              PLL_Init_step8done ; se (R0 != 
                                                            0), terminar pollin
                                                            g
  375 0000014A F102 0201       ADD              R2, R2, #1  ; R2 = R2 + 1 (incr
                                                            ementar o contador 
                                                            de timeout)
  376 0000014E 429A            CMP              R2, R3      ; se (R2 < 0xFFFF),
                                                             continuar o pollin
                                                            g
  377 00000150 D3F7            BLO              PLL_Init_step8loop
  378 00000152         ; O PLL nunca travou ou não está ligado.
  379 00000152         ; Pular o resto da inicialização, levando o sistema ser 
                       clockado pelo MOSC,
  380 00000152         ; que é um cristal de 25MHz.
  381 00000152 4770            BX               LR          ; return
  382 00000154         PLL_Init_step8done
  383 00000154         ; 9)Escrever o valor do PSYSDIV no registrador SYSCTL_RS
                       CLKCFG_R, setar o bit USEPLL para
  384 00000154         ;   ser habilitado e setar o bit MEMTIMU.
  385 00000154 4925            LDR              R1, =SYSCTL_RSCLKCFG_R ; R1 = S
                                                            YSCTL_RSCLKCFG_R (p
                                                            onteiro)
  386 00000156 6808            LDR              R0, [R1]    ; R0 = [R1] (valor)
                                                            
  387 00000158 F240 33FF       LDR              R3, =SYSCTL_RSCLKCFG_PSYSDIV_M 
                                                            ; R3 = SYSCTL_RSCLK
                                                            CFG_PSYSDIV_M (masc



ARM Macro Assembler    Page 18 


                                                            ara)
  388 0000015C EA20 0003       BIC              R0, R0, R3  ; R0 = R0&~SYSCTL_R
                                                            SCLKCFG_PSYSDIV_M (
                                                            limpar o campo PSYS
                                                            DIV)
  389 00000160 F100 0005       ADD              R0, R0, #(PSYSDIV&SYSCTL_RSCLKC
FG_PSYSDIV_M) 
                                                            ; R0 = R0 + (PSYSDI
                                                            V&SYSCTL_RSCLKCFG_P
                                                            SYSDIV_M) (configur
                                                            ar PSYSDIV como def
                                                            inido acima)
  390 00000164 F040 4000       ORR              R0, R0, #SYSCTL_RSCLKCFG_MEMTIM
U 
                                                            ; R0 = R0|SYSCTL_RS
                                                            CLKCFG_MEMTIMU (set
                                                            ar o bit MEMTIMU pa
                                                            ra atualizar os par
                                                            âmetros de temporiz
                                                            ação de memória)
  391 00000168 F040 5080       ORR              R0, R0, #SYSCTL_RSCLKCFG_USEPLL
 
                                                            ; R0 = R0|SYSCTL_RS
                                                            CLKCFG_USEPLL (seta
                                                            r o bit USEPLL para
                                                             pegar o clock do P
                                                            LL)
  392 0000016C 6008            STR              R0, [R1]    ; [R1] = R0 (execuç
                                                            ão e acesso são sus
                                                            pensas enquanto as 
                                                            atualizações na tem
                                                            porização da memóri
                                                            a são atualizadas)
  393 0000016E 4770            BX               LR          ; return
  394 00000170         
  395 00000170         
  396 00000170         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  397 00000170         ; SYSTICK
  398 00000170         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  399 00000170 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
  400 00000170 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
  401 00000170 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
  402 00000170         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  403 00000170                 EXPORT           SysTick_Init
  404 00000170                 EXPORT           SysTick_Wait1ms
  405 00000170         ;------------SysTick_Init------------
  406 00000170         ; Configura o sistema para utilizar o SysTick para delay



ARM Macro Assembler    Page 19 


                       s
  407 00000170         ; Entrada: Nenhum
  408 00000170         ; Saída: Nenhum
  409 00000170         ; Modifica: R0, R1
  410 00000170         SysTick_Init
  411 00000170 4931            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R (pontei
                                                            ro)
  412 00000172 F04F 0000       MOV              R0, #0      ; desabilita Systic
                                                            k durante a configu
                                                            ração
  413 00000176 6008            STR              R0, [R1]    ; escreve no endere
                                                            ço de memória do pe
                                                            riférico
  414 00000178 4930            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_R (po
                                                            inteiro)
  415 0000017A F06F 407F       LDR              R0, =0x00FFFFFF ;    ; valor má
                                                            ximo de recarga 2^2
                                                            4 ticks
  416 0000017E 6008            STR              R0, [R1]    ; escreve no endere
                                                            ço de memória do pe
                                                            riférico o NVIC_ST_
                                                            RELOAD_M
  417 00000180 492F            LDR              R1, =NVIC_ST_CURRENT_R ; R1 = &
                                                            NVIC_ST_CURRENT_R (
                                                            ponteiro)
  418 00000182 F04F 0000       MOV              R0, #0      ; qualquer escrita 
                                                            no endereço NVIC_ST
                                                            _CURRENT_R o limpa
  419 00000186 6008            STR              R0, [R1]    ; limpa o contador
  420 00000188 492B            LDR              R1, =NVIC_ST_CTRL_R ; habilita 
                                                            o SysTick com o clo
                                                            ck do core
  421 0000018A F04F 0005       MOV              R0, #0x05   ; ENABLE | CLK_SRC
  422 0000018E 6008            STR              R0, [R1]    ; Seta os bits de E
                                                            NABLE e CLK_SRC na 
                                                            memória
  423 00000190 4770            BX               LR
  424 00000192         
  425 00000192         ;------------SysTick_Wait------------
  426 00000192         ; Atraso de tempo utilizando processador ocupado
  427 00000192         ; Entrada: R0 -> parâmetro de delay em unidades do clock
                        do core (12.5ns)
  428 00000192         ; Saída: Nenhum
  429 00000192         ; Modifica: R0
  430 00000192         SysTick_Wait
  431 00000192 B40A            PUSH             {R1, R3}    ; Salva os valores 
                                                            de R1 e R3 externos
                                                            
  432 00000194 4929            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_RSUB 
                                                            R0 (ponteiro)
  433 00000196 F1A0 0001       SUB              R0, #1
  434 0000019A 6008            STR              R0, [R1]    ; delay-1, número d
                                                            e contagens para es
                                                            perar
  435 0000019C 4926            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R



ARM Macro Assembler    Page 20 


  436 0000019E         SysTick_Wait_loop
  437 0000019E 680B            LDR              R3, [R1]    ; R3 = &NVIC_ST_CTR
                                                            L_R (ponteiro)
  438 000001A0 F413 3380       ANDS             R3, R3, #0x00010000 ; O bit COU
                                                            NT está setado? (Bi
                                                            t 16)
  439 000001A4 D0FB            BEQ              SysTick_Wait_loop ; Se sim perm
                                                            anece no loop
  440 000001A6 BC0A            POP              {R1, R3}    ; Restaura
  441 000001A8 4770            BX               LR          ; Se não, retorna
  442 000001AA         
  443 000001AA         ;------------SysTick_Wait1ms------------
  444 000001AA         ; tempo de atraso usando processador ocupado. Assume um 
                       clock de 80 MHz
  445 000001AA         ; Entrada: R0 --> Número de vezes para contar 1ms.
  446 000001AA         ; Saída: Não tem
  447 000001AA         ; Modifica: R0
  448 000001AA 00013880 
                       DELAY1MS
                               EQU              80000       ; número de ciclos 
                                                            de clock para conta
                                                            r 1ms (assumindo 80
                                                             MHz)
  449 000001AA         ; 80000 x 12,5 ns = 1 ms
  450 000001AA         
  451 000001AA         SysTick_Wait1ms
  452 000001AA B510            PUSH             {R4, LR}    ; salva o valor atu
                                                            al de R4 e Link Reg
                                                            ister
  453 000001AC 0004            MOVS             R4, R0      ; R4 = R0  numEsper
                                                            asRestantes com atu
                                                            alização dos flags
  454 000001AE D004            BEQ              SysTick_Wait1ms_done ; Se o num
                                                            EsperasRestantes ==
                                                             0, vai para o fim
  455 000001B0         SysTick_Wait1ms_loop
  456 000001B0 4824            LDR              R0, =DELAY1MS ; R0 = DELAY1MS (
                                                            número de ticks par
                                                            a contar 1ms)
  457 000001B2 F7FF FFEE       BL               SysTick_Wait ; chama a rotina p
                                                            ara esperar por 1ms
                                                            
  458 000001B6 1E64            SUBS             R4, R4, #1  ; R4 = R4 - 1; numE
                                                            sperasRestantes--
  459 000001B8 D8FA            BHI              SysTick_Wait1ms_loop ; se (numE
                                                            sperasRestantes > 0
                                                            ), espera mais 1ms
  460 000001BA         SysTick_Wait1ms_done
  461 000001BA BD10            POP              {R4, PC}    ;return
  462 000001BC         
  463 000001BC         ;------------SysTick_Wait1us------------
  464 000001BC         ; tempo de atraso usando processador ocupado. Assume um 
                       clock de 80 MHz
  465 000001BC         ; Entrada: R0 --> Número de vezes para contar 1us.
  466 000001BC         ; Saída: Não tem
  467 000001BC         ; Modifica: R0
  468 000001BC 00000050 
                       DELAY1US
                               EQU              80          ; número de ciclos 



ARM Macro Assembler    Page 21 


                                                            de clock para conta
                                                            r 1ms (assumindo 80
                                                             MHz)
  469 000001BC         ; 80000 x 12,5 ns = 1 ms
  470 000001BC         
  471 000001BC         SysTick_Wait1us
  472 000001BC B510            PUSH             {R4, LR}    ; salva o valor atu
                                                            al de R4 e Link Reg
                                                            ister
  473 000001BE 0004            MOVS             R4, R0      ; R4 = R0  numEsper
                                                            asRestantes com atu
                                                            alização dos flags
  474 000001C0 D005            BEQ              SysTick_Wait1us_done ; Se o num
                                                            EsperasRestantes ==
                                                             0, vai para o fim
  475 000001C2         SysTick_Wait1us_loop
  476 000001C2 F04F 0050       LDR              R0, =DELAY1US ; R0 = DELAY1MS (
                                                            número de ticks par
                                                            a contar 1ms)
  477 000001C6 F7FF FFE4       BL               SysTick_Wait ; chama a rotina p
                                                            ara esperar por 1ms
                                                            
  478 000001CA 1E64            SUBS             R4, R4, #1  ; R4 = R4 - 1; numE
                                                            sperasRestantes--
  479 000001CC D8F9            BHI              SysTick_Wait1us_loop ; se (numE
                                                            sperasRestantes > 0
                                                            ), espera mais 1ms
  480 000001CE         SysTick_Wait1us_done
  481 000001CE BD10            POP              {R4, PC}    ;return
  482 000001D0         
  483 000001D0         
  484 000001D0         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  485 000001D0         ; Fim do Arquivo
  486 000001D0         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  487 000001D0                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  488 000001D0                 END                          ;Fim do arquivo
              40060410 
              40060404 
              40060408 
              4006040C 
              4006041C 
              E000E104 
              E000E430 
              400FE0B0 
              400FE07C 
              400FE050 
              400FE144 
              400FE160 
              000FFC00 
              400FE164 
              400FE0C0 
              03EF03EF 
              04C4B400 



ARM Macro Assembler    Page 22 


              07270E00 
              05F5E100 
              01850185 
              01440144 
              03938700 
              01030103 
              02625A00 
              00F42400 
              400FE168 
              E000E010 
              E000E014 
              E000E018 
              00013880 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\utils.d -o.\objects\utils.o -IC:\Users\DAELN\Download
s\C_Exemplo\RTE -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C12
9 -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVI
SION_VERSION SETA 518" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\uti
ls.lst utils.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 180 in file utils.s
   Uses
      None
Comment: .text unused
Interrupt_Init 00000000

Symbol: Interrupt_Init
   Definitions
      At line 185 in file utils.s
   Uses
      At line 183 in file utils.s
Comment: Interrupt_Init used once
PLL_Init 00000048

Symbol: PLL_Init
   Definitions
      At line 226 in file utils.s
   Uses
      At line 182 in file utils.s
Comment: PLL_Init used once
PLL_Init_step3loop 00000062

Symbol: PLL_Init_step3loop
   Definitions
      At line 246 in file utils.s
   Uses
      At line 249 in file utils.s
Comment: PLL_Init_step3loop used once
PLL_Init_step7done 00000136

Symbol: PLL_Init_step7done
   Definitions
      At line 363 in file utils.s
   Uses
      At line 328 in file utils.s
      At line 335 in file utils.s
      At line 342 in file utils.s
      At line 348 in file utils.s
      At line 354 in file utils.s
      At line 360 in file utils.s

PLL_Init_step7extremelyslow 00000132

Symbol: PLL_Init_step7extremelyslow
   Definitions
      At line 361 in file utils.s
   Uses
      At line 358 in file utils.s
Comment: PLL_Init_step7extremelyslow used once
PLL_Init_step7fast 00000102

Symbol: PLL_Init_step7fast
   Definitions
      At line 336 in file utils.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 332 in file utils.s
Comment: PLL_Init_step7fast used once
PLL_Init_step7fullspeed 000000EA

Symbol: PLL_Init_step7fullspeed
   Definitions
      At line 322 in file utils.s
   Uses
      At line 316 in file utils.s
Comment: PLL_Init_step7fullspeed used once
PLL_Init_step7medium 0000010E

Symbol: PLL_Init_step7medium
   Definitions
      At line 343 in file utils.s
   Uses
      At line 339 in file utils.s
Comment: PLL_Init_step7medium used once
PLL_Init_step7slow 0000011A

Symbol: PLL_Init_step7slow
   Definitions
      At line 349 in file utils.s
   Uses
      At line 346 in file utils.s
Comment: PLL_Init_step7slow used once
PLL_Init_step7toofast 000000E8

Symbol: PLL_Init_step7toofast
   Definitions
      At line 317 in file utils.s
   Uses
      None
Comment: PLL_Init_step7toofast unused
PLL_Init_step7veryfast 000000F6

Symbol: PLL_Init_step7veryfast
   Definitions
      At line 329 in file utils.s
   Uses
      At line 325 in file utils.s
Comment: PLL_Init_step7veryfast used once
PLL_Init_step7veryslow 00000126

Symbol: PLL_Init_step7veryslow
   Definitions
      At line 355 in file utils.s
   Uses
      At line 352 in file utils.s
Comment: PLL_Init_step7veryslow used once
PLL_Init_step8done 00000154

Symbol: PLL_Init_step8done
   Definitions
      At line 382 in file utils.s
   Uses
      At line 374 in file utils.s
Comment: PLL_Init_step8done used once
PLL_Init_step8loop 00000142



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: PLL_Init_step8loop
   Definitions
      At line 371 in file utils.s
   Uses
      At line 377 in file utils.s
Comment: PLL_Init_step8loop used once
SysTick_Init 00000170

Symbol: SysTick_Init
   Definitions
      At line 410 in file utils.s
   Uses
      At line 403 in file utils.s
Comment: SysTick_Init used once
SysTick_Wait 00000192

Symbol: SysTick_Wait
   Definitions
      At line 430 in file utils.s
   Uses
      At line 457 in file utils.s
      At line 477 in file utils.s

SysTick_Wait1ms 000001AA

Symbol: SysTick_Wait1ms
   Definitions
      At line 451 in file utils.s
   Uses
      At line 404 in file utils.s
Comment: SysTick_Wait1ms used once
SysTick_Wait1ms_done 000001BA

Symbol: SysTick_Wait1ms_done
   Definitions
      At line 460 in file utils.s
   Uses
      At line 454 in file utils.s
Comment: SysTick_Wait1ms_done used once
SysTick_Wait1ms_loop 000001B0

Symbol: SysTick_Wait1ms_loop
   Definitions
      At line 455 in file utils.s
   Uses
      At line 459 in file utils.s
Comment: SysTick_Wait1ms_loop used once
SysTick_Wait1us 000001BC

Symbol: SysTick_Wait1us
   Definitions
      At line 471 in file utils.s
   Uses
      None
Comment: SysTick_Wait1us unused
SysTick_Wait1us_done 000001CE

Symbol: SysTick_Wait1us_done



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 480 in file utils.s
   Uses
      At line 474 in file utils.s
Comment: SysTick_Wait1us_done used once
SysTick_Wait1us_loop 000001C2

Symbol: SysTick_Wait1us_loop
   Definitions
      At line 475 in file utils.s
   Uses
      At line 479 in file utils.s
Comment: SysTick_Wait1us_loop used once
SysTick_Wait_loop 0000019E

Symbol: SysTick_Wait_loop
   Definitions
      At line 436 in file utils.s
   Uses
      At line 439 in file utils.s
Comment: SysTick_Wait_loop used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DELAY1MS 00013880

Symbol: DELAY1MS
   Definitions
      At line 448 in file utils.s
   Uses
      At line 456 in file utils.s
Comment: DELAY1MS used once
DELAY1US 00000050

Symbol: DELAY1US
   Definitions
      At line 468 in file utils.s
   Uses
      At line 476 in file utils.s
Comment: DELAY1US used once
FXTAL 017D7840

Symbol: FXTAL
   Definitions
      At line 273 in file utils.s
   Uses
      At line 279 in file utils.s
Comment: FXTAL used once
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 177 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ unused
GPIO_PORTJ_AHB_ADCCTL_R 40060530

Symbol: GPIO_PORTJ_AHB_ADCCTL_R
   Definitions
      At line 168 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_ADCCTL_R unused
GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 155 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_AFSEL_R unused
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 166 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_AMSEL_R unused
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 165 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_BITS_R 40060000

Symbol: GPIO_PORTJ_AHB_DATA_BITS_R
   Definitions
      At line 145 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_BITS_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 146 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_R unused
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 163 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DEN_R unused
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 147 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DIR_R unused
GPIO_PORTJ_AHB_DMACTL_R 40060534

Symbol: GPIO_PORTJ_AHB_DMACTL_R
   Definitions
      At line 169 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DMACTL_R unused
GPIO_PORTJ_AHB_DR12R_R 4006053C

Symbol: GPIO_PORTJ_AHB_DR12R_R
   Definitions
      At line 171 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DR12R_R unused
GPIO_PORTJ_AHB_DR2R_R 40060500

Symbol: GPIO_PORTJ_AHB_DR2R_R
   Definitions
      At line 156 in file utils.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: GPIO_PORTJ_AHB_DR2R_R unused
GPIO_PORTJ_AHB_DR4R_R 40060504

Symbol: GPIO_PORTJ_AHB_DR4R_R
   Definitions
      At line 157 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DR4R_R unused
GPIO_PORTJ_AHB_DR8R_R 40060508

Symbol: GPIO_PORTJ_AHB_DR8R_R
   Definitions
      At line 158 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DR8R_R unused
GPIO_PORTJ_AHB_IBE_R 40060408

Symbol: GPIO_PORTJ_AHB_IBE_R
   Definitions
      At line 149 in file utils.s
   Uses
      At line 194 in file utils.s
Comment: GPIO_PORTJ_AHB_IBE_R used once
GPIO_PORTJ_AHB_ICR_R 4006041C

Symbol: GPIO_PORTJ_AHB_ICR_R
   Definitions
      At line 154 in file utils.s
   Uses
      At line 202 in file utils.s
Comment: GPIO_PORTJ_AHB_ICR_R used once
GPIO_PORTJ_AHB_IEV_R 4006040C

Symbol: GPIO_PORTJ_AHB_IEV_R
   Definitions
      At line 150 in file utils.s
   Uses
      At line 198 in file utils.s
Comment: GPIO_PORTJ_AHB_IEV_R used once
GPIO_PORTJ_AHB_IM_R 40060410

Symbol: GPIO_PORTJ_AHB_IM_R
   Definitions
      At line 151 in file utils.s
   Uses
      At line 186 in file utils.s
      At line 206 in file utils.s

GPIO_PORTJ_AHB_IS_R 40060404

Symbol: GPIO_PORTJ_AHB_IS_R
   Definitions
      At line 148 in file utils.s
   Uses
      At line 190 in file utils.s
Comment: GPIO_PORTJ_AHB_IS_R used once



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 164 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_MIS_R 40060418

Symbol: GPIO_PORTJ_AHB_MIS_R
   Definitions
      At line 153 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_MIS_R unused
GPIO_PORTJ_AHB_ODR_R 4006050C

Symbol: GPIO_PORTJ_AHB_ODR_R
   Definitions
      At line 159 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_ODR_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 167 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_PCTL_R unused
GPIO_PORTJ_AHB_PC_R 40060FC4

Symbol: GPIO_PORTJ_AHB_PC_R
   Definitions
      At line 176 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_PC_R unused
GPIO_PORTJ_AHB_PDR_R 40060514

Symbol: GPIO_PORTJ_AHB_PDR_R
   Definitions
      At line 161 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_PDR_R unused
GPIO_PORTJ_AHB_PP_R 40060FC0

Symbol: GPIO_PORTJ_AHB_PP_R
   Definitions
      At line 175 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_PP_R unused
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 160 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_PUR_R unused
GPIO_PORTJ_AHB_RIS_R 40060414

Symbol: GPIO_PORTJ_AHB_RIS_R
   Definitions
      At line 152 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_RIS_R unused
GPIO_PORTJ_AHB_SI_R 40060538

Symbol: GPIO_PORTJ_AHB_SI_R
   Definitions
      At line 170 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_SI_R unused
GPIO_PORTJ_AHB_SLR_R 40060518

Symbol: GPIO_PORTJ_AHB_SLR_R
   Definitions
      At line 162 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_SLR_R unused
GPIO_PORTJ_AHB_WAKELVL_R 40060544

Symbol: GPIO_PORTJ_AHB_WAKELVL_R
   Definitions
      At line 173 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_WAKELVL_R unused
GPIO_PORTJ_AHB_WAKEPEN_R 40060540

Symbol: GPIO_PORTJ_AHB_WAKEPEN_R
   Definitions
      At line 172 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_WAKEPEN_R unused
GPIO_PORTJ_AHB_WAKESTAT_R 40060548

Symbol: GPIO_PORTJ_AHB_WAKESTAT_R
   Definitions
      At line 174 in file utils.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_WAKESTAT_R unused
MFRAC 00000000

Symbol: MFRAC
   Definitions
      At line 277 in file utils.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 279 in file utils.s
      At line 284 in file utils.s

MINT 00000060

Symbol: MINT
   Definitions
      At line 276 in file utils.s
   Uses
      At line 279 in file utils.s
      At line 288 in file utils.s

N 00000004

Symbol: N
   Definitions
      At line 275 in file utils.s
   Uses
      At line 279 in file utils.s
      At line 295 in file utils.s

NVIC_ACTIVE0_R E000E300

Symbol: NVIC_ACTIVE0_R
   Definitions
      At line 73 in file utils.s
   Uses
      None
Comment: NVIC_ACTIVE0_R unused
NVIC_ACTIVE1_R E000E304

Symbol: NVIC_ACTIVE1_R
   Definitions
      At line 74 in file utils.s
   Uses
      None
Comment: NVIC_ACTIVE1_R unused
NVIC_ACTIVE2_R E000E308

Symbol: NVIC_ACTIVE2_R
   Definitions
      At line 75 in file utils.s
   Uses
      None
Comment: NVIC_ACTIVE2_R unused
NVIC_ACTIVE3_R E000E30C

Symbol: NVIC_ACTIVE3_R
   Definitions
      At line 76 in file utils.s
   Uses
      None
Comment: NVIC_ACTIVE3_R unused
NVIC_ACTLR_R E000E008

Symbol: NVIC_ACTLR_R
   Definitions
      At line 56 in file utils.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      None
Comment: NVIC_ACTLR_R unused
NVIC_APINT_R E000ED0C

Symbol: NVIC_APINT_R
   Definitions
      At line 109 in file utils.s
   Uses
      None
Comment: NVIC_APINT_R unused
NVIC_CFG_CTRL_R E000ED14

Symbol: NVIC_CFG_CTRL_R
   Definitions
      At line 111 in file utils.s
   Uses
      None
Comment: NVIC_CFG_CTRL_R unused
NVIC_CPAC_R E000ED88

Symbol: NVIC_CPAC_R
   Definitions
      At line 121 in file utils.s
   Uses
      None
Comment: NVIC_CPAC_R unused
NVIC_CPUID_R E000ED00

Symbol: NVIC_CPUID_R
   Definitions
      At line 106 in file utils.s
   Uses
      None
Comment: NVIC_CPUID_R unused
NVIC_DBG_CTRL_R E000EDF0

Symbol: NVIC_DBG_CTRL_R
   Definitions
      At line 133 in file utils.s
   Uses
      None
Comment: NVIC_DBG_CTRL_R unused
NVIC_DBG_DATA_R E000EDF8

Symbol: NVIC_DBG_DATA_R
   Definitions
      At line 135 in file utils.s
   Uses
      None
Comment: NVIC_DBG_DATA_R unused
NVIC_DBG_INT_R E000EDFC

Symbol: NVIC_DBG_INT_R
   Definitions
      At line 136 in file utils.s
   Uses
      None
Comment: NVIC_DBG_INT_R unused
NVIC_DBG_XFER_R E000EDF4



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols


Symbol: NVIC_DBG_XFER_R
   Definitions
      At line 134 in file utils.s
   Uses
      None
Comment: NVIC_DBG_XFER_R unused
NVIC_DEBUG_STAT_R E000ED30

Symbol: NVIC_DEBUG_STAT_R
   Definitions
      At line 118 in file utils.s
   Uses
      None
Comment: NVIC_DEBUG_STAT_R unused
NVIC_DIS0_R E000E180

Symbol: NVIC_DIS0_R
   Definitions
      At line 61 in file utils.s
   Uses
      None
Comment: NVIC_DIS0_R unused
NVIC_DIS1_R E000E184

Symbol: NVIC_DIS1_R
   Definitions
      At line 62 in file utils.s
   Uses
      None
Comment: NVIC_DIS1_R unused
NVIC_DIS2_R E000E188

Symbol: NVIC_DIS2_R
   Definitions
      At line 63 in file utils.s
   Uses
      None
Comment: NVIC_DIS2_R unused
NVIC_DIS3_R E000E18C

Symbol: NVIC_DIS3_R
   Definitions
      At line 64 in file utils.s
   Uses
      None
Comment: NVIC_DIS3_R unused
NVIC_EN0_R E000E100

Symbol: NVIC_EN0_R
   Definitions
      At line 57 in file utils.s
   Uses
      None
Comment: NVIC_EN0_R unused
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

      At line 58 in file utils.s
   Uses
      At line 210 in file utils.s
Comment: NVIC_EN1_R used once
NVIC_EN2_R E000E108

Symbol: NVIC_EN2_R
   Definitions
      At line 59 in file utils.s
   Uses
      None
Comment: NVIC_EN2_R unused
NVIC_EN3_R E000E10C

Symbol: NVIC_EN3_R
   Definitions
      At line 60 in file utils.s
   Uses
      None
Comment: NVIC_EN3_R unused
NVIC_FAULT_ADDR_R E000ED38

Symbol: NVIC_FAULT_ADDR_R
   Definitions
      At line 120 in file utils.s
   Uses
      None
Comment: NVIC_FAULT_ADDR_R unused
NVIC_FAULT_STAT_R E000ED28

Symbol: NVIC_FAULT_STAT_R
   Definitions
      At line 116 in file utils.s
   Uses
      None
Comment: NVIC_FAULT_STAT_R unused
NVIC_FPCA_R E000EF38

Symbol: NVIC_FPCA_R
   Definitions
      At line 139 in file utils.s
   Uses
      None
Comment: NVIC_FPCA_R unused
NVIC_FPCC_R E000EF34

Symbol: NVIC_FPCC_R
   Definitions
      At line 138 in file utils.s
   Uses
      None
Comment: NVIC_FPCC_R unused
NVIC_FPDSC_R E000EF3C

Symbol: NVIC_FPDSC_R
   Definitions
      At line 140 in file utils.s
   Uses
      None



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

Comment: NVIC_FPDSC_R unused
NVIC_HFAULT_STAT_R E000ED2C

Symbol: NVIC_HFAULT_STAT_R
   Definitions
      At line 117 in file utils.s
   Uses
      None
Comment: NVIC_HFAULT_STAT_R unused
NVIC_INT_CTRL_R E000ED04

Symbol: NVIC_INT_CTRL_R
   Definitions
      At line 107 in file utils.s
   Uses
      None
Comment: NVIC_INT_CTRL_R unused
NVIC_MM_ADDR_R E000ED34

Symbol: NVIC_MM_ADDR_R
   Definitions
      At line 119 in file utils.s
   Uses
      None
Comment: NVIC_MM_ADDR_R unused
NVIC_MPU_ATTR1_R E000EDA8

Symbol: NVIC_MPU_ATTR1_R
   Definitions
      At line 128 in file utils.s
   Uses
      None
Comment: NVIC_MPU_ATTR1_R unused
NVIC_MPU_ATTR2_R E000EDB0

Symbol: NVIC_MPU_ATTR2_R
   Definitions
      At line 130 in file utils.s
   Uses
      None
Comment: NVIC_MPU_ATTR2_R unused
NVIC_MPU_ATTR3_R E000EDB8

Symbol: NVIC_MPU_ATTR3_R
   Definitions
      At line 132 in file utils.s
   Uses
      None
Comment: NVIC_MPU_ATTR3_R unused
NVIC_MPU_ATTR_R E000EDA0

Symbol: NVIC_MPU_ATTR_R
   Definitions
      At line 126 in file utils.s
   Uses
      None
Comment: NVIC_MPU_ATTR_R unused
NVIC_MPU_BASE1_R E000EDA4




ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

Symbol: NVIC_MPU_BASE1_R
   Definitions
      At line 127 in file utils.s
   Uses
      None
Comment: NVIC_MPU_BASE1_R unused
NVIC_MPU_BASE2_R E000EDAC

Symbol: NVIC_MPU_BASE2_R
   Definitions
      At line 129 in file utils.s
   Uses
      None
Comment: NVIC_MPU_BASE2_R unused
NVIC_MPU_BASE3_R E000EDB4

Symbol: NVIC_MPU_BASE3_R
   Definitions
      At line 131 in file utils.s
   Uses
      None
Comment: NVIC_MPU_BASE3_R unused
NVIC_MPU_BASE_R E000ED9C

Symbol: NVIC_MPU_BASE_R
   Definitions
      At line 125 in file utils.s
   Uses
      None
Comment: NVIC_MPU_BASE_R unused
NVIC_MPU_CTRL_R E000ED94

Symbol: NVIC_MPU_CTRL_R
   Definitions
      At line 123 in file utils.s
   Uses
      None
Comment: NVIC_MPU_CTRL_R unused
NVIC_MPU_NUMBER_R E000ED98

Symbol: NVIC_MPU_NUMBER_R
   Definitions
      At line 124 in file utils.s
   Uses
      None
Comment: NVIC_MPU_NUMBER_R unused
NVIC_MPU_TYPE_R E000ED90

Symbol: NVIC_MPU_TYPE_R
   Definitions
      At line 122 in file utils.s
   Uses
      None
Comment: NVIC_MPU_TYPE_R unused
NVIC_PEND0_R E000E200

Symbol: NVIC_PEND0_R
   Definitions
      At line 65 in file utils.s



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: NVIC_PEND0_R unused
NVIC_PEND1_R E000E204

Symbol: NVIC_PEND1_R
   Definitions
      At line 66 in file utils.s
   Uses
      None
Comment: NVIC_PEND1_R unused
NVIC_PEND2_R E000E208

Symbol: NVIC_PEND2_R
   Definitions
      At line 67 in file utils.s
   Uses
      None
Comment: NVIC_PEND2_R unused
NVIC_PEND3_R E000E20C

Symbol: NVIC_PEND3_R
   Definitions
      At line 68 in file utils.s
   Uses
      None
Comment: NVIC_PEND3_R unused
NVIC_PRI0_R E000E400

Symbol: NVIC_PRI0_R
   Definitions
      At line 77 in file utils.s
   Uses
      None
Comment: NVIC_PRI0_R unused
NVIC_PRI10_R E000E428

Symbol: NVIC_PRI10_R
   Definitions
      At line 87 in file utils.s
   Uses
      None
Comment: NVIC_PRI10_R unused
NVIC_PRI11_R E000E42C

Symbol: NVIC_PRI11_R
   Definitions
      At line 88 in file utils.s
   Uses
      None
Comment: NVIC_PRI11_R unused
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 89 in file utils.s
   Uses
      At line 215 in file utils.s
Comment: NVIC_PRI12_R used once



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

NVIC_PRI13_R E000E434

Symbol: NVIC_PRI13_R
   Definitions
      At line 90 in file utils.s
   Uses
      None
Comment: NVIC_PRI13_R unused
NVIC_PRI14_R E000E438

Symbol: NVIC_PRI14_R
   Definitions
      At line 91 in file utils.s
   Uses
      None
Comment: NVIC_PRI14_R unused
NVIC_PRI15_R E000E43C

Symbol: NVIC_PRI15_R
   Definitions
      At line 92 in file utils.s
   Uses
      None
Comment: NVIC_PRI15_R unused
NVIC_PRI16_R E000E440

Symbol: NVIC_PRI16_R
   Definitions
      At line 93 in file utils.s
   Uses
      None
Comment: NVIC_PRI16_R unused
NVIC_PRI17_R E000E444

Symbol: NVIC_PRI17_R
   Definitions
      At line 94 in file utils.s
   Uses
      None
Comment: NVIC_PRI17_R unused
NVIC_PRI18_R E000E448

Symbol: NVIC_PRI18_R
   Definitions
      At line 95 in file utils.s
   Uses
      None
Comment: NVIC_PRI18_R unused
NVIC_PRI19_R E000E44C

Symbol: NVIC_PRI19_R
   Definitions
      At line 96 in file utils.s
   Uses
      None
Comment: NVIC_PRI19_R unused
NVIC_PRI1_R E000E404

Symbol: NVIC_PRI1_R



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 78 in file utils.s
   Uses
      None
Comment: NVIC_PRI1_R unused
NVIC_PRI20_R E000E450

Symbol: NVIC_PRI20_R
   Definitions
      At line 97 in file utils.s
   Uses
      None
Comment: NVIC_PRI20_R unused
NVIC_PRI21_R E000E454

Symbol: NVIC_PRI21_R
   Definitions
      At line 98 in file utils.s
   Uses
      None
Comment: NVIC_PRI21_R unused
NVIC_PRI22_R E000E458

Symbol: NVIC_PRI22_R
   Definitions
      At line 99 in file utils.s
   Uses
      None
Comment: NVIC_PRI22_R unused
NVIC_PRI23_R E000E45C

Symbol: NVIC_PRI23_R
   Definitions
      At line 100 in file utils.s
   Uses
      None
Comment: NVIC_PRI23_R unused
NVIC_PRI24_R E000E460

Symbol: NVIC_PRI24_R
   Definitions
      At line 101 in file utils.s
   Uses
      None
Comment: NVIC_PRI24_R unused
NVIC_PRI25_R E000E464

Symbol: NVIC_PRI25_R
   Definitions
      At line 102 in file utils.s
   Uses
      None
Comment: NVIC_PRI25_R unused
NVIC_PRI26_R E000E468

Symbol: NVIC_PRI26_R
   Definitions
      At line 103 in file utils.s
   Uses



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Absolute symbols

      None
Comment: NVIC_PRI26_R unused
NVIC_PRI27_R E000E46C

Symbol: NVIC_PRI27_R
   Definitions
      At line 104 in file utils.s
   Uses
      None
Comment: NVIC_PRI27_R unused
NVIC_PRI28_R E000E470

Symbol: NVIC_PRI28_R
   Definitions
      At line 105 in file utils.s
   Uses
      None
Comment: NVIC_PRI28_R unused
NVIC_PRI2_R E000E408

Symbol: NVIC_PRI2_R
   Definitions
      At line 79 in file utils.s
   Uses
      None
Comment: NVIC_PRI2_R unused
NVIC_PRI3_R E000E40C

Symbol: NVIC_PRI3_R
   Definitions
      At line 80 in file utils.s
   Uses
      None
Comment: NVIC_PRI3_R unused
NVIC_PRI4_R E000E410

Symbol: NVIC_PRI4_R
   Definitions
      At line 81 in file utils.s
   Uses
      None
Comment: NVIC_PRI4_R unused
NVIC_PRI5_R E000E414

Symbol: NVIC_PRI5_R
   Definitions
      At line 82 in file utils.s
   Uses
      None
Comment: NVIC_PRI5_R unused
NVIC_PRI6_R E000E418

Symbol: NVIC_PRI6_R
   Definitions
      At line 83 in file utils.s
   Uses
      None
Comment: NVIC_PRI6_R unused
NVIC_PRI7_R E000E41C



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Absolute symbols


Symbol: NVIC_PRI7_R
   Definitions
      At line 84 in file utils.s
   Uses
      None
Comment: NVIC_PRI7_R unused
NVIC_PRI8_R E000E420

Symbol: NVIC_PRI8_R
   Definitions
      At line 85 in file utils.s
   Uses
      None
Comment: NVIC_PRI8_R unused
NVIC_PRI9_R E000E424

Symbol: NVIC_PRI9_R
   Definitions
      At line 86 in file utils.s
   Uses
      None
Comment: NVIC_PRI9_R unused
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 399 in file utils.s
   Uses
      At line 411 in file utils.s
      At line 420 in file utils.s
      At line 435 in file utils.s

NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 401 in file utils.s
   Uses
      At line 417 in file utils.s
Comment: NVIC_ST_CURRENT_R used once
NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 400 in file utils.s
   Uses
      At line 414 in file utils.s
      At line 432 in file utils.s

NVIC_SW_TRIG_R E000EF00

Symbol: NVIC_SW_TRIG_R
   Definitions
      At line 137 in file utils.s
   Uses
      None
Comment: NVIC_SW_TRIG_R unused
NVIC_SYS_CTRL_R E000ED10



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Absolute symbols


Symbol: NVIC_SYS_CTRL_R
   Definitions
      At line 110 in file utils.s
   Uses
      None
Comment: NVIC_SYS_CTRL_R unused
NVIC_SYS_HND_CTRL_R E000ED24

Symbol: NVIC_SYS_HND_CTRL_R
   Definitions
      At line 115 in file utils.s
   Uses
      None
Comment: NVIC_SYS_HND_CTRL_R unused
NVIC_SYS_PRI1_R E000ED18

Symbol: NVIC_SYS_PRI1_R
   Definitions
      At line 112 in file utils.s
   Uses
      None
Comment: NVIC_SYS_PRI1_R unused
NVIC_SYS_PRI2_R E000ED1C

Symbol: NVIC_SYS_PRI2_R
   Definitions
      At line 113 in file utils.s
   Uses
      None
Comment: NVIC_SYS_PRI2_R unused
NVIC_SYS_PRI3_R E000ED20

Symbol: NVIC_SYS_PRI3_R
   Definitions
      At line 114 in file utils.s
   Uses
      None
Comment: NVIC_SYS_PRI3_R unused
NVIC_UNPEND0_R E000E280

Symbol: NVIC_UNPEND0_R
   Definitions
      At line 69 in file utils.s
   Uses
      None
Comment: NVIC_UNPEND0_R unused
NVIC_UNPEND1_R E000E284

Symbol: NVIC_UNPEND1_R
   Definitions
      At line 70 in file utils.s
   Uses
      None
Comment: NVIC_UNPEND1_R unused
NVIC_UNPEND2_R E000E288

Symbol: NVIC_UNPEND2_R
   Definitions



ARM Macro Assembler    Page 18 Alphabetic symbol ordering
Absolute symbols

      At line 71 in file utils.s
   Uses
      None
Comment: NVIC_UNPEND2_R unused
NVIC_UNPEND3_R E000E28C

Symbol: NVIC_UNPEND3_R
   Definitions
      At line 72 in file utils.s
   Uses
      None
Comment: NVIC_UNPEND3_R unused
NVIC_VTABLE_R E000ED08

Symbol: NVIC_VTABLE_R
   Definitions
      At line 108 in file utils.s
   Uses
      None
Comment: NVIC_VTABLE_R unused
PSYSDIV 00000005

Symbol: PSYSDIV
   Definitions
      At line 19 in file utils.s
   Uses
      At line 279 in file utils.s
      At line 389 in file utils.s

Q 00000000

Symbol: Q
   Definitions
      At line 274 in file utils.s
   Uses
      At line 279 in file utils.s
      At line 293 in file utils.s

SYSCLK 04C4B400

Symbol: SYSCLK
   Definitions
      At line 279 in file utils.s
   Uses
      At line 313 in file utils.s
Comment: SYSCLK used once
SYSCTL_DSCLKCFG_DSOSCSRC_M 00F00000

Symbol: SYSCTL_DSCLKCFG_DSOSCSRC_M
   Definitions
      At line 37 in file utils.s
   Uses
      At line 264 in file utils.s
Comment: SYSCTL_DSCLKCFG_DSOSCSRC_M used once
SYSCTL_DSCLKCFG_DSOSCSRC_MOSC 00300000

Symbol: SYSCTL_DSCLKCFG_DSOSCSRC_MOSC
   Definitions
      At line 38 in file utils.s



ARM Macro Assembler    Page 19 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 265 in file utils.s
Comment: SYSCTL_DSCLKCFG_DSOSCSRC_MOSC used once
SYSCTL_DSCLKCFG_R 400FE144

Symbol: SYSCTL_DSCLKCFG_R
   Definitions
      At line 36 in file utils.s
   Uses
      At line 262 in file utils.s
Comment: SYSCTL_DSCLKCFG_R used once
SYSCTL_MEMTIM0_R 400FE0C0

Symbol: SYSCTL_MEMTIM0_R
   Definitions
      At line 35 in file utils.s
   Uses
      At line 309 in file utils.s
Comment: SYSCTL_MEMTIM0_R used once
SYSCTL_MOSCCTL_NOXTAL 00000004

Symbol: SYSCTL_MOSCCTL_NOXTAL
   Definitions
      At line 25 in file utils.s
   Uses
      At line 240 in file utils.s
Comment: SYSCTL_MOSCCTL_NOXTAL used once
SYSCTL_MOSCCTL_PWRDN 00000008

Symbol: SYSCTL_MOSCCTL_PWRDN
   Definitions
      At line 24 in file utils.s
   Uses
      At line 241 in file utils.s
Comment: SYSCTL_MOSCCTL_PWRDN used once
SYSCTL_MOSCCTL_R 400FE07C

Symbol: SYSCTL_MOSCCTL_R
   Definitions
      At line 23 in file utils.s
   Uses
      At line 238 in file utils.s
Comment: SYSCTL_MOSCCTL_R used once
SYSCTL_PLLFREQ0_MFRAC_M 000FFC00

Symbol: SYSCTL_PLLFREQ0_MFRAC_M
   Definitions
      At line 41 in file utils.s
   Uses
      At line 282 in file utils.s
Comment: SYSCTL_PLLFREQ0_MFRAC_M used once
SYSCTL_PLLFREQ0_MFRAC_S 0000000A

Symbol: SYSCTL_PLLFREQ0_MFRAC_S
   Definitions
      At line 43 in file utils.s
   Uses
      At line 284 in file utils.s
Comment: SYSCTL_PLLFREQ0_MFRAC_S used once



ARM Macro Assembler    Page 20 Alphabetic symbol ordering
Absolute symbols

SYSCTL_PLLFREQ0_MINT_M 000003FF

Symbol: SYSCTL_PLLFREQ0_MINT_M
   Definitions
      At line 42 in file utils.s
   Uses
      At line 286 in file utils.s
Comment: SYSCTL_PLLFREQ0_MINT_M used once
SYSCTL_PLLFREQ0_MINT_S 00000000

Symbol: SYSCTL_PLLFREQ0_MINT_S
   Definitions
      At line 44 in file utils.s
   Uses
      At line 288 in file utils.s
Comment: SYSCTL_PLLFREQ0_MINT_S used once
SYSCTL_PLLFREQ0_PLLPWR 00800000

Symbol: SYSCTL_PLLFREQ0_PLLPWR
   Definitions
      At line 40 in file utils.s
   Uses
      At line 299 in file utils.s
Comment: SYSCTL_PLLFREQ0_PLLPWR used once
SYSCTL_PLLFREQ0_R 400FE160

Symbol: SYSCTL_PLLFREQ0_R
   Definitions
      At line 39 in file utils.s
   Uses
      At line 280 in file utils.s
      At line 297 in file utils.s

SYSCTL_PLLFREQ1_N_M 0000001F

Symbol: SYSCTL_PLLFREQ1_N_M
   Definitions
      At line 47 in file utils.s
   Uses
      At line 294 in file utils.s
Comment: SYSCTL_PLLFREQ1_N_M used once
SYSCTL_PLLFREQ1_N_S 00000000

Symbol: SYSCTL_PLLFREQ1_N_S
   Definitions
      At line 49 in file utils.s
   Uses
      At line 295 in file utils.s
Comment: SYSCTL_PLLFREQ1_N_S used once
SYSCTL_PLLFREQ1_Q_M 00001F00

Symbol: SYSCTL_PLLFREQ1_Q_M
   Definitions
      At line 46 in file utils.s
   Uses
      At line 292 in file utils.s
Comment: SYSCTL_PLLFREQ1_Q_M used once
SYSCTL_PLLFREQ1_Q_S 00000008




ARM Macro Assembler    Page 21 Alphabetic symbol ordering
Absolute symbols

Symbol: SYSCTL_PLLFREQ1_Q_S
   Definitions
      At line 48 in file utils.s
   Uses
      At line 293 in file utils.s
Comment: SYSCTL_PLLFREQ1_Q_S used once
SYSCTL_PLLFREQ1_R 400FE164

Symbol: SYSCTL_PLLFREQ1_R
   Definitions
      At line 45 in file utils.s
   Uses
      At line 290 in file utils.s
Comment: SYSCTL_PLLFREQ1_R used once
SYSCTL_PLLSTAT_LOCK 00000001

Symbol: SYSCTL_PLLSTAT_LOCK
   Definitions
      At line 51 in file utils.s
   Uses
      At line 373 in file utils.s
Comment: SYSCTL_PLLSTAT_LOCK used once
SYSCTL_PLLSTAT_R 400FE168

Symbol: SYSCTL_PLLSTAT_R
   Definitions
      At line 50 in file utils.s
   Uses
      At line 368 in file utils.s
Comment: SYSCTL_PLLSTAT_R used once
SYSCTL_RIS_MOSCPUPRIS 00000100

Symbol: SYSCTL_RIS_MOSCPUPRIS
   Definitions
      At line 22 in file utils.s
   Uses
      At line 248 in file utils.s
Comment: SYSCTL_RIS_MOSCPUPRIS used once
SYSCTL_RIS_R 400FE050

Symbol: SYSCTL_RIS_R
   Definitions
      At line 21 in file utils.s
   Uses
      At line 245 in file utils.s
Comment: SYSCTL_RIS_R used once
SYSCTL_RSCLKCFG_MEMTIMU 80000000

Symbol: SYSCTL_RSCLKCFG_MEMTIMU
   Definitions
      At line 27 in file utils.s
   Uses
      At line 390 in file utils.s
Comment: SYSCTL_RSCLKCFG_MEMTIMU used once
SYSCTL_RSCLKCFG_NEWFREQ 40000000

Symbol: SYSCTL_RSCLKCFG_NEWFREQ
   Definitions
      At line 28 in file utils.s



ARM Macro Assembler    Page 22 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 303 in file utils.s
Comment: SYSCTL_RSCLKCFG_NEWFREQ used once
SYSCTL_RSCLKCFG_OSCSRC_M 00F00000

Symbol: SYSCTL_RSCLKCFG_OSCSRC_M
   Definitions
      At line 32 in file utils.s
   Uses
      At line 255 in file utils.s
Comment: SYSCTL_RSCLKCFG_OSCSRC_M used once
SYSCTL_RSCLKCFG_OSCSRC_MOSC 00300000

Symbol: SYSCTL_RSCLKCFG_OSCSRC_MOSC
   Definitions
      At line 33 in file utils.s
   Uses
      At line 256 in file utils.s
Comment: SYSCTL_RSCLKCFG_OSCSRC_MOSC used once
SYSCTL_RSCLKCFG_PLLSRC_M 0F000000

Symbol: SYSCTL_RSCLKCFG_PLLSRC_M
   Definitions
      At line 30 in file utils.s
   Uses
      At line 257 in file utils.s
Comment: SYSCTL_RSCLKCFG_PLLSRC_M used once
SYSCTL_RSCLKCFG_PLLSRC_MOSC 03000000

Symbol: SYSCTL_RSCLKCFG_PLLSRC_MOSC
   Definitions
      At line 31 in file utils.s
   Uses
      At line 258 in file utils.s
Comment: SYSCTL_RSCLKCFG_PLLSRC_MOSC used once
SYSCTL_RSCLKCFG_PSYSDIV_M 000003FF

Symbol: SYSCTL_RSCLKCFG_PSYSDIV_M
   Definitions
      At line 34 in file utils.s
   Uses
      At line 387 in file utils.s
      At line 389 in file utils.s

SYSCTL_RSCLKCFG_R 400FE0B0

Symbol: SYSCTL_RSCLKCFG_R
   Definitions
      At line 26 in file utils.s
   Uses
      At line 231 in file utils.s
      At line 253 in file utils.s
      At line 301 in file utils.s
      At line 385 in file utils.s

SYSCTL_RSCLKCFG_USEPLL 10000000

Symbol: SYSCTL_RSCLKCFG_USEPLL
   Definitions



ARM Macro Assembler    Page 23 Alphabetic symbol ordering
Absolute symbols

      At line 29 in file utils.s
   Uses
      At line 233 in file utils.s
      At line 391 in file utils.s

161 symbols
521 symbols in table
